{"version":3,"file":"static/js/210.b8d93707.chunk.js","mappings":"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","sources":["shared/components/Modal/Modal.styled.js","shared/components/Modal/Modal.jsx","modules/AuthForms/LoginForm/LoginForm.styled.js","shared/components/Buttons/BtnToggleFormAuth/BtnToggleFormAuthStyled.js","shared/components/Buttons/BtnToggleFormAuth/BtnToggleFormAuth.jsx","shared/components/Buttons/BtnConfirmAuth/BtnConfirmAuth.jsx","shared/components/Buttons/BtnClose/BtnCloseStyled.js","shared/components/Buttons/BtnClose/BtnClose.jsx","modules/AuthForms/LoginForm/LoginForm.jsx","modules/AuthForms/RegisterForm/RegisterForm.jsx","pages/AuthPage/AuthPage.jsx","shared/components/Buttons/BtnConfirmAuth/BtnConfirmAuthS.js","shared/components/InputDefault/InputDefault.styled.js","shared/components/InputDefault/InputDefault.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--backdrop);\n  backdrop-filter: blur(1.5px);\n  overscroll-behavior: contain;\n`;\n","import { useEffect } from \"react\";\nimport { StyledOverlay } from \"./Modal.styled\";\nimport { createPortal } from \"react-dom\";\n\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nconst Modal = ({ children, modalClose }) => {\n  useEffect(() => {\n    document.body.classList.add(\"no-scroll\");\n\n    const handleKeyDown = (e) => {\n      if (e.code === \"Escape\") {\n        document.body.classList.remove(\"no-scroll\");\n        modalClose();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      document.body.classList.remove(\"no-scroll\");\n    };\n  }, [modalClose]);\n\n  const handleClickOverlay = (e) => {\n    if (e.target === e.currentTarget) {\n      document.body.classList.remove(\"no-scroll\");\n      modalClose();\n    }\n  };\n\n  return createPortal(\n    <StyledOverlay onClick={handleClickOverlay}>{children}</StyledOverlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from \"styled-components\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\n\nexport const StyledModal = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  max-width: 474px;\n  width: 100%;\n  padding: 60px 80px;\n  border: 1px solid var(--text-color-30);\n  border-radius: 20px;\n  background-color: var(--second-background);\n\n  @media screen and (max-width: 768px) {\n    max-width: 335px;\n    padding: 40px 20px;\n  }\n`;\n\n// export const StyledCloseBtn = styled.button`\n//   position: absolute;\n//   top: 24px;\n//   right: 24px;\n//   width: 28px;\n//   height: 28px;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   background-color: transparent;\n//   border: none;\n//   cursor: pointer;\n\n//   @media screen and (max-width: 768px) {\n//     width: 24px;\n//     height: 24px;\n//     top: 16px;\n//     right: 16px;\n//   }\n// `;\n\n\n// ================================\n\nexport const AuthTitle = styled.h2`\n  align-self: flex-start;\n  font-size: 24px;\n  font-family: \"GilroyBold\";\n  line-height: 1.3;\n  color: var(--text-color-100);\n\n  @media screen and (max-width: 768px) {\n    font-size: 20px;\n    line-height: 1.4;\n  }\n`;\n\nexport const FormStyled = styled.form`\n  width: 100%;\n`;\n\nexport const InputsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-top: 32px;\n  margin-bottom: 32px;\n  width: 100%;\n\n  @media screen and (max-width: 768px) {\n    max-width: 295px;\n  }\n`;\n\nexport const InputPasswWrapStyled = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nexport const LuEyeStyled = styled(LuEye)`\n  color: var(--text-color-100);\n`;\n\nexport const LuEyeOffStyled = styled(LuEyeOff)`\n  color: var(--text-color-100);\n`;\n\nexport const BtnEyeStyled = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 14px;\n  width: 26px;\n  height: 26px;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const RestoreStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 16px;\n  font-size: 16px;\n  line-height: 1;\n  background-color: transparent;\n  color: var(--text-color-50);\n  border: none;\n  cursor: pointer;\n  transition: color 250ms linear;\n  &:hover,\n  &:focus {\n    color: var(--text-color-30);\n  }\n`;\n\nexport const ErrorsStyled = styled.div`\n  margin: 0 0;\n  font-size: 12px;\n  line-height: 1.1;\n  color: var(--pink-color);\n`;\n","import styled from \"styled-components\";\n\nexport const BtnToggleFormAuthS = styled.button`\n  margin-top: 16px;\n  font-family: \"GilroyBold\";\n  font-size: 16px;\n  line-height: 1;\n  background-color: transparent;\n  color: var(--text-color-100);\n  border: none;\n  border-bottom: 1px solid var(--text-color-100);\n  cursor: pointer;\n  transition: border-bottom 250ms linear;\n\n  &:hover,\n  &:focus {\n    border-bottom: 1px solid var(--text-color-30);\n  }\n\n  @media screen and (max-width: 768px) {\n    max-width: 295px;\n    font-size: 14px;\n  line-height: 1.1;\n  }\n`;","import { BtnToggleFormAuthS } from \"./BtnToggleFormAuthStyled\";\n\n\nconst BtnToggleFormAuth = ({ children }) => {\n  return (\n    <>\n      <BtnToggleFormAuthS type=\"button\">{children}</BtnToggleFormAuthS>\n    </>\n  );\n};\n\nexport default BtnToggleFormAuth;\n","import { BtnConfirmAuthS } from \"./BtnConfirmAuthS\";\n\n\nconst BtnConfirmAuth = ({ children }) => {\n  return (\n    <>\n      <BtnConfirmAuthS type=\"submit\">{children}</BtnConfirmAuthS>\n    </>\n  );\n};\n\nexport default BtnConfirmAuth;\n","import styled from \"styled-components\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nexport const BtnCloseS = styled.button`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  @media screen and (max-width: 768px) {\n    width: 24px;\n    height: 24px;\n    top: 16px;\n    right: 16px;\n  }\n`;\n\nexport const AiOutlineCloseS = styled(AiOutlineClose)`\n  width: 28px;\n  height: 28px;\n  fill: var( --text-color-100);\n\n  @media screen and (max-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;","import { AiOutlineCloseS, BtnCloseS } from \"./BtnCloseStyled\";\n\nconst BtnClose = ({onClick}) => {\n  return (\n    <>\n      <BtnCloseS type=\"button\" onClick={onClick}>\n        <AiOutlineCloseS/>\n      </BtnCloseS>\n    </>\n  );\n};\n\nexport default BtnClose;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  InputsWrapper,\n  RestoreStyled,\n  AuthTitle,\n  LuEyeStyled,\n  BtnEyeStyled,\n  LuEyeOffStyled,\n  InputPasswWrapStyled,\n  ErrorsStyled,\n  FormStyled,\n  StyledModal,\n} from \"./LoginForm.styled\";\nimport BtnToggleFormAuth from \"../../../shared/components/Buttons/BtnToggleFormAuth\";\nimport BtnConfirmAuth from \"../../../shared/components/Buttons/BtnConfirmAuth\";\nimport InputDefault from \"../../../shared/components/InputDefault/InputDefault\";\nimport {notifyRegisterError} from \"../../../shared/NotificationToastify/Toasts\";\nimport { loginUserThunk } from \"../../../redux/user/userThunks\";\nimport BtnClose from \"../../../shared/components/Buttons/BtnClose\";\n\nconst LogInForm = ({ modalClose}) => {\n  const dispatch = useDispatch();\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordShown = () => setPasswordShown((show) => !show);\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email(\"Invalid email address\")\n        .required(\"Email address is required\"),\n      password: Yup.string()\n        .min(6, \"Enter at least 6 characters\")\n        .max(20, \"Must be maximum 20 characters\")\n        .required(\"Password is required\"),\n    }),\n\n    onSubmit: (values) => {\n      dispatch(loginUserThunk(values))\n        .unwrap()\n        .then((data) => {\n          // notifyLoginSuccess(data);\n        })\n        .catch((error) => {\n          notifyRegisterError(error);\n          navigate(\"/\");\n        });\n    },\n  });\n\n  const handleClickBtnClose = () => {\n    document.body.classList.remove(\"no-scroll\");\n    navigate(\"/\");\n  };\n\n  return (\n    <>\n      <StyledModal>\n        <BtnClose onClick={handleClickBtnClose} />\n        <AuthTitle>Login</AuthTitle>\n        <FormStyled onSubmit={formik.handleSubmit}>\n          <InputsWrapper>\n            <InputDefault\n              name=\"email\"\n              type=\"email\"\n              value={formik.values.email}\n              placeholder=\"Email\"\n              // autoComplete=\"off\"\n              onChange={formik.handleChange}\n              label=\"Email\"\n            />\n\n            {formik.touched.email && formik.errors.email ? (\n              <ErrorsStyled>{formik.errors.email}</ErrorsStyled>\n            ) : null}\n\n            <InputPasswWrapStyled>\n              <InputDefault\n                variant=\"input-password\"\n                name=\"password\"\n                type={passwordShown ? \"text\" : \"password\"}\n                value={formik.values.password}\n                placeholder=\"Password\"\n                onChange={formik.handleChange}\n                label=\"Password\"\n              />\n              <BtnEyeStyled\n                type=\"button\"\n                onClick={togglePasswordShown}\n                name=\"togglePassword\"\n                aria-label=\"Toggle password visibility\"\n              >\n                {passwordShown ? (\n                  <LuEyeStyled size={18} />\n                ) : (\n                  <LuEyeOffStyled size={18} />\n                )}\n              </BtnEyeStyled>\n            </InputPasswWrapStyled>\n\n            {formik.touched.password && formik.errors.password ? (\n              <ErrorsStyled>{formik.errors.password}</ErrorsStyled>\n            ) : null}\n          </InputsWrapper>\n          <BtnConfirmAuth type=\"submit\">Enter</BtnConfirmAuth>\n        </FormStyled>\n\n        <RestoreStyled type=\"button\">Restore password</RestoreStyled>\n\n        <Link to=\"/auth/registerForm\">\n          <BtnToggleFormAuth type=\"button\">Register</BtnToggleFormAuth>\n        </Link>\n      </StyledModal>\n    </>\n  );\n};\n\nexport default LogInForm;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  AuthTitle,\n  BtnEyeStyled,\n  ErrorsStyled,\n  FormStyled,\n  InputPasswWrapStyled,\n  InputsWrapper,\n  LuEyeOffStyled,\n  LuEyeStyled,\n  StyledModal,\n} from \"../../../modules/AuthForms/LoginForm/LoginForm.styled\";\nimport BtnToggleFormAuth from \"../../../shared/components/Buttons/BtnToggleFormAuth\";\nimport BtnConfirmAuth from \"../../../shared/components/Buttons/BtnConfirmAuth\";\nimport InputDefault from \"../../../shared/components/InputDefault/InputDefault\";\nimport {\n  notifyRegisterError,\n  notifyVerifyEmail,\n} from \"../../../shared/NotificationToastify/Toasts\";\nimport { registerUserThunk } from \"../../../redux/user/userThunks\";\nimport BtnClose from \"../../../shared/components/Buttons/BtnClose\";\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordShown = () => setPasswordShown((show) => !show);\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    },\n\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(3, \"The name must consist of at least 3 characters\")\n        .required(\"Name is required\"),\n      email: Yup.string()\n        .email(\"Invalid email address\")\n        .required(\"Email address is required\"),\n      password: Yup.string()\n        .min(6, \"Enter at least 6 characters\")\n        .max(20, \"Must be maximum 20 characters\")\n        .required(\"Password is required\"),\n    }),\n\n    onSubmit: (values) => {\n      dispatch(registerUserThunk(values))\n        .unwrap()\n        .then(() => {\n          notifyVerifyEmail();\n          navigate(\"/\");\n        })\n        .catch((error) => {\n          notifyRegisterError(error);\n          navigate(\"/\");\n        });\n    },\n  });\n\n  const handleClickBtnClose = () => {\n    document.body.classList.remove(\"no-scroll\");\n    navigate(\"/\");\n  };\n\n  return (\n    <>\n      <StyledModal>\n        <BtnClose onClick={handleClickBtnClose} />\n\n        <AuthTitle>Sign Up</AuthTitle>\n        <FormStyled onSubmit={formik.handleSubmit}>\n          <InputsWrapper>\n            <InputDefault\n              name=\"name\"\n              type=\"name\"\n              value={formik.values.name}\n              placeholder=\"Name\"\n              // autoComplete=\"off\"\n              onChange={formik.handleChange}\n              label=\"Name\"\n            />\n\n            {formik.touched.name && formik.errors.name ? (\n              <ErrorsStyled>{formik.errors.name}</ErrorsStyled>\n            ) : null}\n\n            <InputDefault\n              name=\"email\"\n              type=\"email\"\n              value={formik.values.email}\n              placeholder=\"Email\"\n              // autoComplete=\"off\"\n              onChange={formik.handleChange}\n              label=\"Email\"\n            />\n\n            {formik.touched.email && formik.errors.email ? (\n              <ErrorsStyled>{formik.errors.email}</ErrorsStyled>\n            ) : null}\n\n            <InputPasswWrapStyled>\n              <InputDefault\n                variant=\"input-password\"\n                name=\"password\"\n                type={passwordShown ? \"text\" : \"password\"}\n                value={formik.values.password}\n                placeholder=\"Password\"\n                onChange={formik.handleChange}\n                label=\"Password\"\n              />\n              <BtnEyeStyled\n                type=\"button\"\n                onClick={togglePasswordShown}\n                name=\"togglePassword\"\n                aria-label=\"Toggle password visibility\"\n              >\n                {passwordShown ? (\n                  <LuEyeStyled size={18} />\n                ) : (\n                  <LuEyeOffStyled size={18} />\n                )}\n              </BtnEyeStyled>\n            </InputPasswWrapStyled>\n\n            {formik.touched.password && formik.errors.password ? (\n              <ErrorsStyled>{formik.errors.password}</ErrorsStyled>\n            ) : null}\n          </InputsWrapper>\n          <BtnConfirmAuth type=\"submit\">Enter</BtnConfirmAuth>\n        </FormStyled>\n\n        <Link to=\"/auth/loginForm\">\n          <BtnToggleFormAuth type=\"button\">Login</BtnToggleFormAuth>\n        </Link>\n      </StyledModal>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import { useNavigate, useParams } from \"react-router-dom\";\nimport Modal from \"../../shared/components/Modal/Modal\";\nimport LogInForm from \"../../modules/AuthForms/LoginForm\"\nimport RegisterForm from \"../../modules/AuthForms/RegisterForm/RegisterForm\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsAuth } from \"../../redux/user/userSelectors\";\n\n\nconst AuthPage = () => {\n  const isAuth = useSelector(selectIsAuth);\n  const { type } = useParams();\n  const formToDisplay = type === \"loginForm\" ? <LogInForm /> : <RegisterForm />;\n  const navigate = useNavigate();\n\n  return (\n    !isAuth && (\n    <Modal modalClose={() => navigate(\"/\")}>{formToDisplay}</Modal>\n    )\n  );\n};\n\nexport default AuthPage;\n","import styled from \"styled-components\";\n\nexport const BtnConfirmAuthS = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 314px;\n  width: 100%;\n  height: 48px;\n  border-radius: 30px;\n  font-family: \"GilroyBold\";\n  color: var(--text-color-100);\n  background-color: var(--blue-background);\n  margin: 0 auto;\n  border: transparent;\n  transform: scale(1);\n  transition: transform 250ms linear;\n  \n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (max-width: 768px) {\n    max-width: 295px;\n    font-size: 14px;\n  line-height: 1.1;\n  }\n`;","import styled from \"styled-components\";\n\nexport const InputS = styled.input`\n  box-sizing: border-box;\n  padding: 14px 18px;\n  width: 100%;\n  height: 44px;\n  border-radius: 30px;\n  border: 1px solid var(--text-color-60);\n  font-size: 16px;\n  line-height: 1;\n  outline: 1px solid transparent;\n  background: transparent;\n  color: var(--star-color-100);\n\n  &::placeholder {\n    color: var(--text-color-40);\n    background: transparent;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: var(--star-color-100);\n  }\n\n  &.input-password{\n    padding: 14px 54px 14px 18px;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 14px;\n    &::placeholder {\n      line-height: 1.1;\n    }\n  }\n`;","import { InputS } from \"./InputDefault.styled\";\n\n\nconst InputDefault = ({ variant, ...restProps }) => (\n  <InputS className={variant} {...restProps} />\n);\n\nexport default InputDefault;\n"],"names":["StyledOverlay","styled","div","_templateObject","_taggedTemplateLiteral","modalRoot","document","querySelector","_ref","children","modalClose","useEffect","body","classList","add","handleKeyDown","e","code","remove","window","addEventListener","removeEventListener","createPortal","_jsx","onClick","target","currentTarget","StyledModal","AuthTitle","h2","_templateObject2","FormStyled","form","_templateObject3","InputsWrapper","_templateObject4","InputPasswWrapStyled","_templateObject5","LuEyeStyled","LuEye","_templateObject6","LuEyeOffStyled","LuEyeOff","_templateObject7","BtnEyeStyled","button","_templateObject8","RestoreStyled","_templateObject9","ErrorsStyled","_templateObject10","BtnToggleFormAuthS","_Fragment","type","BtnConfirmAuthS","BtnCloseS","AiOutlineCloseS","AiOutlineClose","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","passwordShown","setPasswordShown","navigate","useNavigate","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","max","onSubmit","values","loginUserThunk","unwrap","then","data","catch","error","notifyRegisterError","_jsxs","BtnClose","handleSubmit","InputDefault","name","value","placeholder","onChange","handleChange","label","touched","errors","variant","show","size","BtnConfirmAuth","Link","to","BtnToggleFormAuth","registerUserThunk","notifyVerifyEmail","isAuth","useSelector","selectIsAuth","formToDisplay","useParams","LogInForm","RegisterForm","Modal","InputS","input","restProps","_objectWithoutProperties","_excluded","_objectSpread","className"],"sourceRoot":""}