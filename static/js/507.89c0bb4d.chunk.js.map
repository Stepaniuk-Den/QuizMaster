{"version":3,"file":"static/js/507.89c0bb4d.chunk.js","mappings":"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","sources":["modules/discoverPage/components/RatingStarsRadio/RatingStarsRadioStyled.js","modules/quizPage/QuizFeedback/QuizFeedbackStyled.js","modules/quizPage/QuizFeedback/QuizFeedback.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport Rating from \"@mui/material/Rating\";\n\nexport const RatingS = styled(Rating)({\n  \"& .MuiRating-iconFilled\": {\n    color: \"var(--star-color-100)\",\n  },\n  \"& .MuiRating-iconEmpty\": {\n    color: \"var(--star-color-8)\",\n  },\n});\n","import styled from \"styled-components\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nexport const FormContainer = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  margin-bottom: 155px;\n  margin-top: 102px;\n  padding: 40px 20px;\n  max-width: 335px;\n  width: 100%;\n  height: 503px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 20px;\n  border: 1px var(--border-color-30) solid;\n  background-color: var(--second-background);\n\n  @media (min-width: 768px) {\n    max-width: 481px;\n    height: 460px;\n    margin-top: 202px;\n    padding: 60px 80px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-top: 170px;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  font-size: 20px;\n  font-family: \"GilroyBold\";\n  line-height: 20px;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\nexport const NameInput = styled.input`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 18px;\n  border-radius: 30px;\n  border: 1px var(--border-color-60) solid;\n  background-color: transparent;\n  margin-bottom: 20px;\n  color: var(--text-color-50);\n  font-size: 14px;\n  letter-spacing: -0.16px;\n  font-family: \"GilroyRegular\";\n`;\n\nexport const RatingWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 4px;\n  margin-bottom: 12px;\n`;\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  &.has-error {\n    gap: 16px;\n  }\n`;\nexport const TextRating = styled.h3`\n  color: var(--text-color-60);\n  font-size: 16px;\n  font-family: \"GilroyRegular\";\n  font-weight: 400;\n  line-height: 22px;\n  margin-right: 8px;\n`;\nexport const StarBtn = styled.button`\n  background-color: transparent;\n  line-height: 10px;\n`;\nexport const FormTextarea = styled.textarea`\n  height: 100%;\n  padding-top: 14px;\n  padding-bottom: 140px;\n  padding-left: 18px;\n  padding-right: 18px;\n  resize: none;\n  border-radius: 15px;\n  border: 1px var(--border-color-60) solid;\n  background-color: transparent;\n  color: var(--text-color-50);\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: -0.16px;\n  font-family: \"GilroyRegular\";\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    padding-bottom: 57px;\n  }\n`;\nexport const SendBtn = styled.button`\n  color: inherit;\n  font-size: 14px;\n  font-family: \"GilroyBold\";\n  line-height: 16px;\n  width: 100%;\n  height: 100%;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  background: var(--accent-color);\n  border-radius: 30px;\n  border: none;\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\nexport const CloseBtnContainer = styled.button`\n  position: absolute;\n  top: 18px;\n  right: 18px;\n  background-color: transparent;\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n  @media (min-width: 768px) {\n    top: 24px;\n    right: 24px;\n  }\n`;\nexport const CloseBtn = styled(AiOutlineClose)`\n  width: 20px;\n  height: 20px;\n  color: var(--text-color-100);\n`;\nexport const ErrorsStyled = styled.div`\n  margin: 0 0;\n  font-size: 12px;\n  line-height: 1.1;\n  color: var(--pink-color);\n  text-align: center;\n`;\n","import { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport {\n  CloseBtn,\n  CloseBtnContainer,\n  ErrorsStyled,\n  FormContainer,\n  FormTextarea,\n  FormTitle,\n  InputWrapper,\n  NameInput,\n  RatingWrapper,\n  SendBtn,\n  TextRating,\n} from \"./QuizFeedbackStyled\";\nimport { selectUser } from \"../../../redux/user/userSelectors\";\nimport { createQuizReviewThunk } from \"../../../redux/feedback/feedbackThunks\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { notifyError } from \"../../../shared/NotificationToastify/Toasts\";\nimport { RatingS } from \"../../discoverPage/components/RatingStarsRadio/RatingStarsRadioStyled\";\n\nconst QuizFeedback = ({ to }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const inputValue = searchParams.get(\"inputValue\");\n  const { isAuth } = useAuth();\n  const { quizId } = useParams();\n  const backLink = useRef(location.state?.from);\n  const infoUser = useSelector(selectUser);\n  const [value, setValue] = useState(0);\n\n  const handleClick = () => {\n    navigate(backLink.current ?? \"/\");\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      rating: 0,\n      feedback: \"\",\n    },\n\n    validationSchema: Yup.object({\n      feedback: Yup.string()\n        .min(8, \"Enter at least 8 characters\")\n        .required(\"Please write your feedback\"),\n    }),\n\n    onSubmit: async (values) => {\n      const reviewData = {\n        userName: inputValue,\n        userAvatar: infoUser.userAvatar,\n        rate: value,\n        comment: values.feedback,\n        quizId: quizId,\n      };\n      try {\n        await dispatch(createQuizReviewThunk({ quizId, reviewData }));\n        navigate(`/quiz/${quizId}/aftertestfeedback`);\n      } catch (error) {\n        notifyError(error);\n      }\n    },\n  });\n\n  return (\n    <>\n      <FormContainer>\n        <CloseBtnContainer onClick={handleClick}>\n          <CloseBtn />\n        </CloseBtnContainer>\n        <form onSubmit={formik.handleSubmit}>\n          <InputWrapper>\n            <FormTitle>Write a review</FormTitle>\n            <NameInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              onChange={formik.handleChange}\n              value={formik.values.name}\n              defaultValue={!isAuth ? inputValue : infoUser.name}\n              readOnly={!isAuth ? inputValue : infoUser.name}\n            />\n          </InputWrapper>\n          <RatingWrapper>\n            <TextRating>Rate the quiz</TextRating>\n            <RatingS\n              name=\"simple-controlled\"\n              value={value}\n              onChange={(_, newValue) => {\n                setValue(newValue);\n              }}\n              emptyIcon={<StarIcon />}\n            />\n          </RatingWrapper>\n          <InputWrapper\n            className={\n              formik.errors.feedback && formik.touched.feedback\n                ? \"has-error\"\n                : \"\"\n            }\n          >\n            <FormTextarea\n              type=\"text\"\n              name=\"feedback\"\n              placeholder=\"What is your opinion on the quiz\"\n              onChange={formik.handleChange}\n              value={formik.values.feedback}\n            />\n            {formik.errors.feedback && formik.touched.feedback ? (\n              <ErrorsStyled>{formik.errors.feedback}</ErrorsStyled>\n            ) : null}\n            <SendBtn type=\"submit\">Send</SendBtn>\n          </InputWrapper>\n        </form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default QuizFeedback;\n"],"names":["RatingS","styled","Rating","color","FormContainer","div","_templateObject","_taggedTemplateLiteral","FormTitle","h2","_templateObject2","NameInput","input","_templateObject3","RatingWrapper","_templateObject4","InputWrapper","_templateObject5","TextRating","h3","_templateObject6","FormTextarea","button","_templateObject7","textarea","_templateObject8","SendBtn","_templateObject9","CloseBtnContainer","_templateObject10","CloseBtn","AiOutlineClose","_templateObject11","ErrorsStyled","_templateObject12","_ref","to","_location$state","dispatch","useDispatch","navigate","useNavigate","location","useLocation","inputValue","URLSearchParams","search","get","isAuth","useAuth","quizId","useParams","backLink","useRef","state","from","infoUser","useSelector","selectUser","_useState","useState","_useState2","_slicedToArray","value","setValue","formik","useFormik","initialValues","rating","feedback","validationSchema","Yup","min","required","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","reviewData","wrap","_context","prev","next","userName","userAvatar","rate","comment","createQuizReviewThunk","concat","t0","notifyError","stop","_x","apply","arguments","_jsx","_Fragment","children","_jsxs","onClick","_backLink$current","current","handleSubmit","type","name","placeholder","onChange","handleChange","defaultValue","readOnly","_","newValue","emptyIcon","StarIcon","className","errors","touched"],"sourceRoot":""}