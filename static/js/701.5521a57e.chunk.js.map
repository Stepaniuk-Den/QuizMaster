{"version":3,"file":"static/js/701.5521a57e.chunk.js","mappings":"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","sources":["modules/createQuizPage/components/QuestionCard/QuestionCard.styled.js","modules/createQuizPage/components/AnswerCard/AnswerCard.styled.js","modules/createQuizPage/components/AnswerCard/AnswerCard.jsx","modules/createQuizPage/components/QuestionCard/QuestionCard.jsx","modules/createQuizPage/components/QuestionsList/QuestionsList.styled.js","modules/createQuizPage/components/QuestionsList/QuestionsList.jsx","modules/createQuizPage/components/SelectAttributeCard/SelectAttributeCard.styled.js","modules/createQuizPage/components/SelectAttributeCard/SelectAttributeCard.jsx","pages/CreateQuizPage/CreateQuizPage.styled.js","api/question.js","redux/question/questionThunks.js","pages/CreateQuizPage/CreateQuizPage.jsx","shared/components/Buttons/BtnConfirmAuth/BtnConfirmAuthS.js","shared/components/PageTitle/PageTitle.styled.js","shared/components/PageTitle/PageTitle.jsx","shared/components/PageTopBar/PageTopBarStyled.js","shared/components/Buttons/BtnCreateQuiz/BtnCreateQuizStyled.js","shared/components/Buttons/BtnCreateQuiz/BtnCreateQuiz.jsx","shared/components/PageTopBar/PageTopBar.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { FiChevronDown } from \"react-icons/fi\";\nimport { PiPlus } from \"react-icons/pi\";\nimport { BtnConfirmAuthS } from \"../../../../shared/components/Buttons/BtnConfirmAuth/BtnConfirmAuthS\";\n\nexport const StyledQuestionWrapper = styled.div`\n  display: flex;\n  width: clamp(280px, 335px, 100%);\n  flex-direction: column;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 768px) {\n    width: 440px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 744px;\n  }\n`;\n\nexport const StyledQuestionCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: clamp(280px, 335px, 100%);\n  height: 562px;\n  margin-top: 20px;\n  padding: 40px 20px;\n  background-color: var(--white-background);\n  border-radius: 20px;\n\n  @media only screen and (min-width: 768px) {\n    width: 440px;\n    padding: 32px 20px;\n    margin-top: 24px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    flex-direction: row;\n    align-items: start;\n    width: 744px;\n    height: 521px;\n    padding: 64px 68px 64px 64px;\n  }\n`;\n\nexport const StyledImageNumberBlock = styled.div`\n  display: none;\n  @media only screen and (min-width: 1440px) {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n\n    & p {\n      color: var(--text-color-100);\n      font-family: \"GilroyBold\";\n    }\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100px;\n\n  border-radius: 50%;\n  border: 1px solid var(--blue-background);\n  background-color: var(--blue-background);\n\n  @media only screen and (min-width: 768px) {\n    width: 120px;\n    height: 120px;\n  }\n`;\n\nexport const StyledPlus = styled(PiPlus)`\n  width: 41px;\n  height: 41px;\n`;\n\nexport const StyledInputTheme = styled.input`\n  display: flex;\n  padding: 14px 18px;\n  width: clamp(270px, 335px, 100%);\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border-radius: 30px;\n  border: 1px solid var(--border-color-60);\n  background-color: transparent;\n  color: var(--text-color-100);\n\n  &::placeholder {\n    color: var(--text-color-100);\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 280px;\n  }\n`;\n\nexport const StyledTimeWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  margin: 32px 0;\n  gap: 14px;\n  & p {\n    color: var(--text-color-60);\n  }\n\n  @media only screen and (min-width: 1440px) {\n    justify-content: start;\n    margin-top: 0;\n  }\n`;\n\nexport const DropdownContainer = styled.div`\n  display: inline-block;\n  position: relative;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  min-width: 91px;\n  height: 36px;\n  padding: 8px 18px;\n  column-gap: 8px;\n  cursor: pointer;\n  background: none;\n  border-radius: 30px;\n  border: 1px solid var(--border-color-60);\n\n  & p {\n    color: var(--text-color-100);\n    font-size: 14px;\n    font-family: \"GilroyBold\";\n    line-height: 18px; /* 128.571% */\n  }\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 2;\n  left: 0;\n  display: ${({ open }) => (open ? \"flex\" : \"none\")};\n  flex-direction: column;\n  gap: 12px;\n  width: 91px;\n  padding: 8px 32px 8px 18px;\n  border-radius: 20px;\n  background: var(--blue-background);\n`;\n\nexport const DropdownItem = styled.li`\n  color: var(--text-color-100);\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const Down = styled(FiChevronDown)`\n  width: 16px;\n  height: 16px;\n  stroke: var(--text-color-100);\n`;\n\nexport const StyledQuestion = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: clamp(280px, 295px, 100%);\n  \n  font-size: 14px;\n  letter-spacing: -0.14px;\n\n  @media only screen and (min-width: 768px) {\n    width: 376px;\n    font-size: 16px;\n    letter-spacing: -0.16px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    margin-left: 32px;\n    width: 460px;\n    height: 100%;\n  }\n`;\n\nexport const StyledInputQuestion = styled.input`\n  display: inline-flex;\n  padding: 14px 18px;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border-radius: 30px;\n  border: 1px solid var(--border-color-60);\n  background-color: transparent;\n  color: var(--text-color-100);\n  &::placeholder {\n    color: var(--text-color-100);\n  }\n`;\n\nexport const AnswerCardContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin: 16px 0;\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  align-items: flex-end;\n  margin-top: auto;\n  gap: 14px;\n\n  @media only screen and (min-width: 768px) {\n  }\n\n  @media only screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    margin-top: auto;\n    gap: 14px;\n  }\n`;\n\nexport const StyledBtnSave = styled(BtnConfirmAuthS)`\n  margin: 0;\n  width: min-content;\n  padding: 16px 32px;\n`;\nexport const StyledBtnCancel = styled(StyledBtnSave)`\n  background-color: transparent;\n  border: 1px solid var(--border-color-60);\n`;\n\nexport const StyledQuestionNumber = styled.p`\n  display: flex;\n  margin-right: auto;\n  font-size: 14px;\n  font-family: \"GilroyBold\";\n  line-height: 18px; /* 128.571% */\n`;\n","import styled from \"styled-components\";\n\nexport const StyledAnswerWrapper = styled.li`\n  display: flex;\n  width: 100%;\n  height: ${(props) => (props.$quiz === \"quiz\" ? \"68px\" : \"44px\")};\n  padding: 14px 18px;\n  font-size: 14px;\n  letter-spacing: -0.14px;\n  border-radius: ${(props) => (props.$quiz === \"quiz\" ? \"15px\" : \"30px\")};\n  border: 1px solid var(--border-color-60);\n\n  @media only screen and (min-width: 375px) {\n    width: 139px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 180px;\n    font-size: 16px;\n    letter-spacing: -0.16px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    align-items: start;\n    width: 222px;\n  }\n`;\n\nexport const StyledLabelAnswer = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: start;\n  align-items: baseline;\n  width: 100%;\n\n  & .letter {\n    font-family: \"GilroyBold\";\n  }\n  & span {\n    position: absolute;\n    display: block;\n    right: 0;\n    top: 0px;\n    height: 14px;\n    width: 14px;\n    border-radius: 4px;\n    border: 1px solid var(--border-color-60);\n    cursor: pointer;\n  }\n\n  & span:after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    left: 50%;\n    top: 50%;\n    height: 12px;\n    width: 12px;\n    background: #205bf1;\n    border-radius: 3px;\n    transform: scale(0);\n  }\n\n  & input[type=\"radio\"]:checked ~ span:after {\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\n\nexport const StyledAnswerBoolean = styled.p`\n  display: flex;\n  width: 80%;\n  padding: 0 2px;\n  margin-left: 2px;\n`;\n\nexport const StyledTextareaAnswer = styled.textarea`\n  display: flex;\n  padding: 0 2px;\n  margin-left: 2px;\n  width: 85%;\n  justify-content: center;\n  align-items: center;\n  resize: none;\n  border: none;\n  background-color: transparent;\n  color: var(--text-color-100);\n  &::placeholder {\n    color: var(--text-color-100);\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 65%;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 75%;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 80%;\n  }\n`;\n\nexport const StyledInputRadio = styled.input`\n  margin-left: auto;\n  /* display: none; */\n  position: absolute;\n  z-index: 1;\n  right: 0;\n  top: 1px;\n  opacity: 0;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport {\n  StyledAnswerBoolean,\n  StyledAnswerWrapper,\n  StyledInputRadio,\n  StyledLabelAnswer,\n  StyledTextareaAnswer,\n} from \"./AnswerCard.styled\";\n\nconst AnswerCard = ({\n  letter,\n  changeAttribute,\n  checked,\n  type,\n  currentQuestion,\n  selectAnswers,\n  handleQuizChange,\n}) => {\n  const definedValueInput = () => {\n    const idxInput = selectAnswers.indexOf(letter);\n    for (let key in currentQuestion) {\n      if (key.includes(`[${idxInput}][answer]`)) return currentQuestion[key];\n    }\n  };\n\n  return (\n    <StyledAnswerWrapper $quiz={type === \"quiz\" ? \"quiz\" : null}>\n      <StyledLabelAnswer htmlFor={letter}>\n        <p className=\"letter\">{letter}:</p>\n        {type === \"quiz\" ? (\n          <StyledTextareaAnswer\n            type=\"text\"\n            id={letter}\n            name=\"answer\"\n            placeholder=\"Enter answer\"\n            value={definedValueInput() ? definedValueInput() : \"\"}\n            onChange={handleQuizChange}\n          />\n        ) : (\n          <StyledAnswerBoolean>\n            {letter === \"A\" ? \"True\" : \"False\"}\n          </StyledAnswerBoolean>\n        )}\n        <StyledInputRadio\n          type=\"radio\"\n          name=\"answer radio\"\n          id={letter}\n          checked={checked === letter}\n          onChange={changeAttribute}\n        />\n        <span></span>\n      </StyledLabelAnswer>\n    </StyledAnswerWrapper>\n  );\n};\n\nexport default AnswerCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  AnswerCardContainer,\n  BtnContainer,\n  Down,\n  DropdownButton,\n  DropdownContainer,\n  DropdownItem,\n  DropdownList,\n  ImageWrapper,\n  StyledBtnCancel,\n  StyledBtnSave,\n  StyledImageNumberBlock,\n  StyledInputQuestion,\n  StyledInputTheme,\n  StyledPlus,\n  StyledQuestion,\n  StyledQuestionCard,\n  StyledQuestionNumber,\n  StyledQuestionWrapper,\n  StyledTimeWrapper,\n} from \"./QuestionCard.styled\";\nimport AnswerCard from \"../AnswerCard/AnswerCard\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useSelector } from \"react-redux\";\nimport { currentCreated } from \"../../../../redux/selectors\";\n\nconst QuestionCard = ({\n  currentQuestion,\n  setCurrentQuestion,\n  handleQuizChange,\n  quiz,\n  selectAnswers,\n  handleSubmit,\n}) => {\n  const [isDropdownTimeOpen, setDropdownTimeOpen] = useState(false);\n  const [isCurrentTime, setIsCurrentTime] = useState(null);\n  const [isChecked, setChecked] = useState(\"\");\n  const currentQuiz = useSelector(currentCreated);\n  const isDesktop = useMediaQuery({ query: \"(min-width: 1440px)\" });\n\n  const questionNumber = 1;\n  const allQuestions = 10;\n\n  const dropdownRef = useRef(null);\n\n  const toggleDropdown = () => {\n    setDropdownTimeOpen(!isDropdownTimeOpen);\n  };\n\n  const formatTime = (timeInSeconds) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n    return `${String(minutes).padStart(1, \"0\")}:${String(seconds).padStart(\n      2,\n      \"0\"\n    )}`;\n  };\n\n  const timeInSeconds = [30, 45, 60, 75, 90, 105, 120];\n\n  useEffect(() => {\n    const handleDocumentTimeClick = (event) => {\n      if (\n        isDropdownTimeOpen &&\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target)\n      ) {\n        setDropdownTimeOpen(false);\n      }\n    };\n    document.addEventListener(\"click\", handleDocumentTimeClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleDocumentTimeClick);\n    };\n  }, [isDropdownTimeOpen]);\n\n  const handleClickTime = (evt) => {\n    const currentTime = evt.target.textContent;\n    const currentTimeId = evt.target.id;\n\n    setIsCurrentTime(currentTime);\n    setCurrentQuestion((prevState) => ({\n      ...prevState,\n      time: currentTimeId,\n    }));\n  };\n\n  const handleRadioAnswer = (event) => {\n    const value = event.target.id;\n\n    setChecked(value);\n    let fields = {};\n    if (currentQuestion.type === \"quiz\") {\n      selectAnswers.forEach((item, idx) => {\n        fields = {\n          ...fields,\n          [`answers[${idx}][correctAnswer]`]: value === item ? true : false,\n        };\n      });\n    } else {\n      selectAnswers.forEach(\n        (item, idx) =>\n          (fields = {\n            ...fields,\n            [`answers[${idx}][answer]`]: idx === 0 ? \"True\" : \"False\",\n            [`answers[${idx}][correctAnswer]`]: value === item ? true : false,\n          })\n      );\n    }\n    setCurrentQuestion((prevState) => ({\n      ...prevState,\n      ...fields,\n    }));\n  };\n\n  \n\n  return (\n    <StyledQuestionWrapper>\n      <StyledInputTheme\n        type=\"text\"\n        placeholder=\"Quiz theme\"\n        name=\"quiz\"\n        value={quiz.quizName}\n        onChange={handleQuizChange}\n      />\n      <StyledQuestionCard>\n        {isDesktop ? (\n          <StyledImageNumberBlock>\n            <ImageWrapper>\n              <StyledPlus />\n            </ImageWrapper>\n            <p>\n              {questionNumber}/{allQuestions}\n            </p>\n          </StyledImageNumberBlock>\n        ) : (\n          <ImageWrapper>\n            <StyledPlus />\n          </ImageWrapper>\n        )}\n        <StyledQuestion>\n          <StyledTimeWrapper>\n            <p>Time:</p>\n            <DropdownContainer ref={dropdownRef}>\n              <DropdownButton onClick={toggleDropdown}>\n                <p>{isCurrentTime}</p>\n                {isDropdownTimeOpen ? (\n                  <Down style={{ rotate: \"180deg\" }} />\n                ) : (\n                  <Down />\n                )}\n              </DropdownButton>\n              <DropdownList open={isDropdownTimeOpen}>\n                {timeInSeconds.map((el) => (\n                  <DropdownItem\n                    key={formatTime(el)}\n                    id={el}\n                    onClick={handleClickTime}\n                  >\n                    {formatTime(el)}\n                  </DropdownItem>\n                ))}\n              </DropdownList>\n            </DropdownContainer>\n          </StyledTimeWrapper>\n          <StyledInputQuestion\n            type=\"text\"\n            name=\"question\"\n            placeholder=\"Enter a question\"\n            value={currentQuestion.question}\n            onChange={handleQuizChange}\n          />\n          <AnswerCardContainer>\n            {selectAnswers?.map((el) => (\n              <AnswerCard\n                key={el}\n                letter={el}\n                checked={isChecked}\n                changeAttribute={handleRadioAnswer}\n                type={currentQuestion.type}\n                handleQuizChange={handleQuizChange}\n                currentQuestion={currentQuestion}\n                selectAnswers={selectAnswers}\n              />\n            ))}\n          </AnswerCardContainer>\n          {isDesktop ? (\n            <BtnContainer>\n              <StyledBtnSave onClick={handleSubmit} data-id={currentQuiz?._id}>\n                Save\n              </StyledBtnSave>\n              <StyledBtnCancel>Cancel</StyledBtnCancel>\n            </BtnContainer>\n          ) : null}\n        </StyledQuestion>\n        {isDesktop ? null : (\n          <BtnContainer>\n            <StyledQuestionNumber>\n              {questionNumber}/{allQuestions}\n            </StyledQuestionNumber>\n            <StyledBtnSave onClick={handleSubmit} data-id={currentQuiz?._id}>\n              Save\n            </StyledBtnSave>\n            <StyledBtnCancel>Cancel</StyledBtnCancel>\n          </BtnContainer>\n        )}\n      </StyledQuestionCard>\n    </StyledQuestionWrapper>\n  );\n};\n\nexport default QuestionCard;\n","import styled from \"styled-components\";\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\n\nexport const QuestionsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 20px;\n  background-color: var(--white-background);\n  width: 335px;\n  min-height: 320px;\n  padding: 40px 20px;\n  & p {\n    padding-bottom: 32px;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 32px; /* 133.333% */\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 240px;\n  height: 630px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 343px;\n  height: 589px;\n  padding: 32px;\n  }\n`;\nexport const QuestionList = styled.li`\n  font-size: 16px;\n  /* width: 204px; */\n  justify-content: space-between;\n  padding-bottom: 12px;\n  display: flex;\n  align-items: center;\n  margin: 8px 0;\n  list-style-type: none;\n  &:not(:last-child) {\n    border-bottom: 1px solid #ccc; /* підкреслення для всіх елементів, окрім останнього. */\n  }\n`;\nexport const SelectStyledQuiz = styled.button`\n  margin-bottom: 8px;\n  margin-top: 32px;\n  width: 100%;\n  max-width: 335px;\n  height: 48px;\n  padding: 15px 18px;\n  border-radius: 30px;\n  border: 1px solid var(--border-color-30);\n  background-color: transparent;\n  color: #F4F4F4;\n  color: var(--text-color-100);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.29; /* 128.571% */\n  letter-spacing: -0.14px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Down = styled(FiChevronDown)`\n  width: 28px;\n  height: 28px;\n  stroke: var(--text-color-100);\n`;\nexport const Up = styled(FiChevronUp)`\n  width: 28px;\n  height: 28px;\n  stroke: var(--text-color-100);\n`;\nexport const DropdownList = styled.div`\n  left: 0;\n  display: block;\n  padding: 18px;\n  border-radius: 15px;\n  background: var(--blue-background);\n  li:first-child {\n    margin-bottom: 4px;\n  }\n  li > button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background-color: transparent;\n    color: inherit;\n    width: 100%;\n    text-align: left;\n    height: 24px;\n  }\n`;","import React, { useState } from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FiTrash2 } from \"react-icons/fi\";\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\nimport { HiArrowLongRight } from \"react-icons/hi2\";\nimport {\n  QuestionsWrapper,\n  QuestionList,\n  SelectStyledQuiz,\n  DropdownList,\n} from \"./QuestionsList.styled\";\n\nfunction QuestionsList({ setCurrentQuestion, currentQuestion }) {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n\n  const selectedOptions =\n    currentQuestion.type === \"\" ? [] : [currentQuestion.type];\n\n  const handleAdd = (value) => {\n    setCurrentQuestion((prevState) => ({ ...prevState, type: value }));\n  };\n\n  const handleDeleteOption = (id) => {\nselectedOptions.filter((option) => option.id !== id);\n\n\n    /* зробити запит на видалення, перед цим додати на кнопку видалення id запитання */\n  };\n\n  return (\n    <QuestionsWrapper>\n      <p>Questions</p>\n      <ul\n        style={{\n          maxHeight: isDropdownOpen ? \"200px\" : \"auto\",\n          overflowY: \"auto\",\n        }}\n      >\n        {selectedOptions.map((option, index) => (\n          <QuestionList key={uuidv4()}>\n            {index + 1}. {option.charAt(0).toUpperCase() + option.slice(1)}\n            <span\n              role=\"button\"\n              onClick={() => handleDeleteOption(option.id)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <FiTrash2 />\n            </span>\n          </QuestionList>\n        ))}\n      </ul>\n      <SelectStyledQuiz\n        onClick={() => {\n          setIsDropdownOpen(!isDropdownOpen);\n        }}\n      >\n        Create\n        {isDropdownOpen ? (\n          <FiChevronUp size={16} />\n        ) : (\n          <FiChevronDown size={16} />\n        )}\n      </SelectStyledQuiz>\n      {isDropdownOpen && (\n        <DropdownList>\n          <ul>\n            <li>\n              <button onClick={() => handleAdd(\"quiz\")}>\n                Quiz <HiArrowLongRight size={24} />\n              </button>\n            </li>\n            <li>\n              <button onClick={() => handleAdd(\"true or false\")}>\n                True or false <HiArrowLongRight size={24} />\n              </button>\n            </li>\n          </ul>\n        </DropdownList>\n      )}\n    </QuestionsWrapper>\n  );\n}\n\nexport default QuestionsList;\n","import styled from \"styled-components\";\n\nexport const AttributeTitles = styled.p`\n  color: #f4f4f4;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n`;\n\n//=========================================\n\nexport const SetAttributeDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 40px;\n  width: 260px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n\n  @media only screen and (min-width: 768px) {\n    width: 474px;\n    column-gap: 64px;\n    flex-wrap: nowrap;\n    margin-top: 32px;\n    margin-bottom: 32px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 110px;\n    flex-direction: column;\n    row-gap: 64px;\n    margin: 0;\n  }\n`;\n\nexport const SelectAudienceDiv = styled.div`\n  width: 100%;\n  max-width: 110px;\n\n  @media only screen and (min-width: 1440px) {\n    padding-top: 16px;\n  }\n`;\n\nexport const InputsWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n  width: 100%;\n\n  @media only screen and (min-width: 375px) {\n    max-width: 110px;\n  }\n  @media only screen and (min-width: 768px) {\n    max-width: 110px;\n  }\n`;\n\nexport const ChooseAudienceLabel = styled.label`\n  cursor: pointer;\n  font-size: 14px;\n  letter-spacing: -0.16px;\n  position: relative;\n  padding-left: 21px;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  & input {\n    display: none;\n  }\n\n  & span {\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    border: 1px solid #205bf1;\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n\n  & span:after {\n    content: \"\";\n    height: 7px;\n    width: 7px;\n    background: #205bf1;\n    display: block;\n    position: absolute;\n    border-radius: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    left: 50%;\n    top: 50%;\n  }\n\n  & input[type=\"radio\"]:checked ~ span:after {\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\n\n//=========================================\n\nexport const AttributeCategorySelect = styled.select`\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  width: 100%;\n  max-width: 110px;\n  margin-top: 16px;\n  padding: 0;\n  background-color: transparent;\n  color: var(--text-color-100);\n  cursor: pointer;\n\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.29;\n  letter-spacing: -0.14px;\n  border: none;\n\n  & option {\n    background: var(--blue-background);\n    color: var(--text-color-100);\n  }\n`;\n\n//=========================================\n\nexport const SelectColorDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  column-gap: 8px;\n  margin-top: 16px;\n\n  @media only screen and (min-width: 1440px) {\n    flex-direction: column;\n    align-items: start;\n    row-gap: 8px;\n  }\n`;\n\nexport const ColorLabel = styled.label`\n  & input {\n    display: none;\n  }\n  & span {\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    cursor: pointer;\n    &.blue {\n      background-color: #43a8d3;\n    }\n    &.viola {\n      background-color: #6636c5;\n    }\n    &.orange {\n      background-color: #e65368;\n    }\n  }\n  & input[type=\"radio\"]:checked + span {\n    border: 1px solid #f4f4f4;\n  }\n`;\n\n//=========================================\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  AttributeCategorySelect,\n  AttributeTitles,\n  ChooseAudienceLabel,\n  ColorLabel,\n  InputsWrapper,\n  SelectAudienceDiv,\n  SelectColorDiv,\n  SetAttributeDiv,\n} from \"./SelectAttributeCard.styled\";\n\nconst SelectAttributeCard = (props) => {\n  const { quiz, question, changeAttribute, changeCategory, categories } = props;\n\n  const arrOptions =\n    quiz.quizType === \"adults\" ? categories?.adults : categories?.children;\n\n  return (\n    <SetAttributeDiv>\n      <SelectAudienceDiv>\n        <AttributeTitles>Audience</AttributeTitles>\n        <InputsWrapper>\n          <ChooseAudienceLabel htmlFor=\"children\">\n            <input\n              type=\"radio\"\n              id=\"children\"\n              name=\"children\"\n              checked={quiz.quizType === \"children\"}\n              onChange={changeAttribute}\n            />\n            For Children\n            <span></span>\n          </ChooseAudienceLabel>\n          <ChooseAudienceLabel htmlFor=\"adults\">\n            <input\n              type=\"radio\"\n              id=\"adults\"\n              name=\"adults\"\n              checked={quiz.quizType === \"adults\"}\n              onChange={changeAttribute}\n            />\n            For Adults\n            <span></span>\n          </ChooseAudienceLabel>\n        </InputsWrapper>\n      </SelectAudienceDiv>\n      <div>\n        <AttributeTitles>Categories</AttributeTitles>\n        <AttributeCategorySelect\n          name=\"categories\"\n          id=\"categories\"\n          value={quiz.quizCategory}\n          onChange={changeCategory}\n        >\n          <option value=\"defaultOption\" hidden>\n            {`For ${quiz.quizType}`}\n          </option>\n          {arrOptions?.map((item) => (\n            <option key={uuidv4()} value={item._id}>\n              {item.categoryName}\n            </option>\n          ))}\n        </AttributeCategorySelect>\n      </div>\n      <div>\n        <AttributeTitles>Background</AttributeTitles>\n        <SelectColorDiv>\n          <ColorLabel>\n            <input\n              type=\"radio\"\n              id=\"#43A8D3\"\n              name=\"background\"\n              checked={question.background === \"#43A8D3\"}\n              onChange={changeAttribute}\n            />\n            <span className=\"blue\"></span>\n          </ColorLabel>\n          <ColorLabel>\n            <input\n              type=\"radio\"\n              id=\"#6636C5\"\n              name=\"background\"\n              checked={question.background === \"#6636C5\"}\n              onChange={changeAttribute}\n            />\n            <span className=\"viola\"></span>\n          </ColorLabel>\n          <ColorLabel>\n            <input\n              type=\"radio\"\n              id=\"#E65368\"\n              name=\"background\"\n              checked={question.background === \"#E65368\"}\n              onChange={changeAttribute}\n            />\n            <span className=\"orange\"></span>\n          </ColorLabel>\n        </SelectColorDiv>\n      </div>\n    </SetAttributeDiv>\n  );\n};\n\nexport default SelectAttributeCard;\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n  padding: 80px 0 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  & h2 {\n    margin: 0;\n  }\n\n  @media only screen and (min-width: 768px) {\n  }\n`;\n\nexport const SectionWrapper = styled.section`\n  /* width: 100%; */\n  width: clamp(280px, 335px, 100%);\n  display: flex;\n  flex-wrap: wrap;\n  column-gap:24px;\n  flex-direction: row;\n  align-items: center;\n\n  @media only screen and (min-width: 768px) {\n    width: 704px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 1240px;\n    flex-wrap: nowrap;\n  }\n`;\n\n","import { instance } from \"./auth\";\n\nconst options = {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\",\n  },\n};\n\nexport async function addQuestion({ quizId, currentQuestion }) {\n  const { data } = await instance.post(\n    `/questions/${quizId}`,\n    currentQuestion,\n    options\n  );\n  return data;\n}\n\nexport async function getQuestion(questionId) {\n  const { data } = await instance.get(`/questions/${questionId}`);\n  return data;\n}\n\nexport async function updateQuestion({ questionId, question }) {\n  const { data } = await instance.put(\n    `/questions/${questionId}`,\n    question,\n    options\n  );\n  return data;\n}\n\nexport async function deleteQuestion(questionId) {\n  const { data } = await instance.delete(`/questions/${questionId}`);\n  return data;\n}\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  addQuestion,\n  getQuestion,\n  updateQuestion,\n  deleteQuestion,\n} from \"../../api/question\";\n\nexport const addQuestionThunk = createAsyncThunk(\n  \"question/addQuestion\",\n  async (questionData, thunkAPI) => {\n    try {\n      const data = await addQuestion(questionData);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const getQuestionThunk = createAsyncThunk(\n  \"question/getQuestion\",\n  async (questionId, thunkAPI) => {\n    try {\n      const data = await getQuestion(questionId);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const updateQuestionThunk = createAsyncThunk(\n  \"question/updateQuestion\",\n  async (questionData, thunkAPI) => {\n    try {\n      const data = await updateQuestion(questionData);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const deleteQuestionThunk = createAsyncThunk(\n  \"question/deleteQuestion\",\n  async (questionId, thunkAPI) => {\n    try {\n      await deleteQuestion(questionId);\n      return questionId;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data);\n    }\n  }\n);\n","import { useEffect, useState } from \"react\";\nimport QuestionCard from \"../../modules/createQuizPage/components/QuestionCard/QuestionCard.jsx\";\nimport QuestionsList from \"../../modules/createQuizPage/components/QuestionsList/QuestionsList.jsx\";\nimport SelectAttributeCard from \"../../modules/createQuizPage/components/SelectAttributeCard/SelectAttributeCard.jsx\";\nimport PageTopBar from \"../../shared/components/PageTopBar/PageTopBar.jsx\";\nimport { PageWrapper, SectionWrapper } from \"./CreateQuizPage.styled.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createQuizThunk,\n  getQuizCategoriesThunk,\n} from \"../../redux/quiz/quizThunks.js\";\nimport { selectDiscoverAllCategories } from \"../../redux/selectors.js\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { addQuestionThunk } from \"../../redux/question/questionThunks.js\";\n\nconst CreateQuizPage = () => {\n  const [currentQuiz, setCurrentQuiz] = useState({\n    quizType: \"adults\",\n    quizName: \"\",\n  });\n  const [currentQuestion, setCurrentQuestion] = useState({\n    question: \"\",\n    type: \"\",\n    /* quiz    true or false */\n  });\n  const allCategories = useSelector(selectDiscoverAllCategories);\n  const dispatch = useDispatch();\n  const isMobile = useMediaQuery({ query: \"(max-width: 767px)\" });\n\n  const selectAnswers =\n    currentQuestion.type === \"quiz\" ? [\"A\", \"C\", \"B\", \"D\"] : [\"A\", \"C\"];\n\n  useEffect(() => {\n    if (allCategories) return;\n    dispatch(getQuizCategoriesThunk());\n  }, [dispatch, allCategories]);\n\n  const handleRadioChange = (event) => {\n    const value = event.target.id;\n    const name = event.target.name;\n\n    if (name === \"children\" || name === \"adults\")\n      return setCurrentQuiz((prevState) => ({\n        ...prevState,\n        quizType: value,\n        quizCategory: \"\",\n      }));\n\n    name === \"background\" &&\n      setCurrentQuestion((prevState) => ({ ...prevState, background: value }));\n  };\n\n  const handleSelectCategory = (event) => {\n    setCurrentQuiz((prevState) => ({\n      ...prevState,\n      quizCategory: event.target.value,\n    }));\n  };\n\n  const handleQuizChange = (event) => {\n    const idInput = event.target.id;\n    const value = event.target.value;\n    const nameInput = event.target.name;\n    if (nameInput === \"answer\") {\n      let answer = {};\n      selectAnswers.forEach(\n        (item, idx) =>\n          idInput === item &&\n          (answer = {\n            [`answers[${idx}][answer]`]: value,\n          })\n      );\n      return setCurrentQuestion((prevState) => ({\n        ...prevState,\n        ...answer,\n      }));\n    }\n    nameInput === \"quiz\" &&\n      setCurrentQuiz((prevState) => ({\n        ...prevState,\n        quizName: value,\n      }));\n    nameInput === \"question\" &&\n      setCurrentQuestion((prevState) => ({\n        ...prevState,\n        question: value,\n      }));\n    nameInput === \"categories\" &&\n      setCurrentQuiz((prevState) => ({\n        ...prevState,\n        quizCategory: value,\n      }));\n  };\n\n  const handleSubmit = (event) => {\n    const quizId = event.target.dataset.id;\n    if (!quizId) dispatch(createQuizThunk(currentQuiz));\n    else dispatch(addQuestionThunk({ currentQuestion, quizId }));\n  };\n\n  return (\n    <PageWrapper>\n      <PageTopBar titlePage=\"Create quize\" />\n      <SectionWrapper>\n        {isMobile ? (\n          <>\n            <QuestionCard\n              currentQuestion={currentQuestion}\n              setCurrentQuestion={setCurrentQuestion}\n              handleQuizChange={handleQuizChange}\n              quiz={currentQuiz}\n              selectAnswers={selectAnswers}\n              handleSubmit={handleSubmit}\n            />\n            <SelectAttributeCard\n              changeAttribute={handleRadioChange}\n              changeCategory={handleQuizChange}\n              categories={allCategories}\n              quiz={currentQuiz}\n              question={currentQuestion}\n            />\n            <QuestionsList\n              currentQuestion={currentQuestion}\n              setCurrentQuestion={setCurrentQuestion}\n            />\n          </>\n        ) : (\n          <>\n            <QuestionsList\n              currentQuestion={currentQuestion}\n              setCurrentQuestion={setCurrentQuestion}\n            />\n            <QuestionCard\n              currentQuestion={currentQuestion}\n              setCurrentQuestion={setCurrentQuestion}\n              handleQuizChange={handleQuizChange}\n              quiz={currentQuiz}\n              selectAnswers={selectAnswers}\n              handleSubmit={handleSubmit}\n            />\n            <SelectAttributeCard\n              quiz={currentQuiz}\n              question={currentQuestion}\n              changeAttribute={handleRadioChange}\n              changeCategory={handleSelectCategory}\n              categories={allCategories}\n            />\n          </>\n        )}\n      </SectionWrapper>\n    </PageWrapper>\n  );\n};\n\nexport default CreateQuizPage;\n","import styled from \"styled-components\";\n\nexport const BtnConfirmAuthS = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 314px;\n  width: 100%;\n  height: 48px;\n  border-radius: 30px;\n  font-family: \"GilroyBold\";\n  color: var(--text-color-100);\n  background-color: var(--blue-background);\n  margin: 0 auto;\n  border: transparent;\n  transform: scale(1);\n  transition: transform 250ms linear;\n  \n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (max-width: 768px) {\n    max-width: 295px;\n    font-size: 14px;\n  line-height: 1.1;\n  }\n`;","import styled from \"styled-components\";\n\nexport const StyledPageTitle = styled.h2`\n  color: var(--text-color-100);\n  font-family: GilroyBold, sans-serif;\n  font-size: 8.53vw;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: -0.01em;\n  line-height: 1.18;\n\n  @media only screen and (min-width: 375px) {\n    font-size: 32px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    font-size: 44px;\n    letter-spacing: -0.44px;\n    line-height: 48px;\n  }\n`;\n","import React from \"react\";\nimport { StyledPageTitle } from \"./PageTitle.styled\";\n\nfunction PageTitle({children}) {\n  return (\n    <StyledPageTitle>\n        {children}\n    </StyledPageTitle>\n  );\n}\n\nexport default PageTitle;\n","import styled from \"styled-components\";\n\nexport const PageTopBarBox = styled.div`\n  /* outline: 1px solid yellow; */\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n  /* justify-content: space-between; */\n  margin-bottom: 40px;\n\n  h2 {\n    margin: 0 0 20px;\n    padding: 0;\n  }\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    margin-bottom: 48px;\n\n    h2 {\n      margin: 0;\n    }\n  }\n`;\n\n\n","import styled from \"styled-components\";\nimport { BiPlus } from \"react-icons/bi\";\n\nexport const ButtonS = styled.button`\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  width: 194px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  border: transparent;\n  background-color: transparent;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    & .bi-btn {\n      scale: 2;\n      transform: rotateZ(90deg);\n    }\n    & .bi-wrapper {\n      border: 3px solid #205bf1;\n    }\n  }\n`;\n\nexport const BiPlusS = styled(BiPlus)`\n  width: 24px;\n  height: 24px;\n  fill: #205bf1;\n  transition: all 0.3s ease-in-out;\n`;\n\nexport const IconWrapper = styled.div`\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  width: 48px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 30px;\n  border: 1px solid #205bf1;\n  transition: all 0.3s ease-in-out;\n`;\n\nexport const BtnTitle = styled.h3`\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  width: 130px;\n  color: var(--text-color-100);\n\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.4;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1.33;\n  }\n`;\n","import { Link } from \"react-router-dom\";\nimport { BiPlusS, BtnTitle, ButtonS, IconWrapper } from \"./BtnCreateQuizStyled\";\n\nconst BtnCreateQuiz = () => {\n  const handleCreateQuiz = () =>{\n  }\n  return (\n    <>\n    <Link to=\"/createquiz\">\n      <ButtonS type=\"button\" onClick={handleCreateQuiz}>\n        <IconWrapper className=\"bi-wrapper\">\n            <BiPlusS className=\"bi-btn\"/>\n        </IconWrapper>\n        <BtnTitle>Create quiz</BtnTitle>\n      </ButtonS>\n      </Link>\n    </>\n  );\n};\n\nexport default BtnCreateQuiz;\n","import React from \"react\";\nimport { PageTopBarBox} from \"./PageTopBarStyled\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport BtnCreateQuiz from \"../Buttons/BtnCreateQuiz/BtnCreateQuiz\";\n\nconst PageTopBar = ({titlePage}) => {  \n  return (\n    <>\n      <PageTopBarBox>\n        <PageTitle>{titlePage}</PageTitle>\n        {titlePage !== \"Create quize\" ? <BtnCreateQuiz /> : null}\n      </PageTopBarBox>\n    </>\n  );\n};\n\nexport default PageTopBar;\n"],"names":["StyledQuestionWrapper","styled","div","_templateObject","_taggedTemplateLiteral","StyledQuestionCard","_templateObject2","StyledImageNumberBlock","_templateObject3","ImageWrapper","_templateObject4","StyledPlus","PiPlus","_templateObject5","StyledInputTheme","input","_templateObject6","StyledTimeWrapper","_templateObject7","DropdownContainer","_templateObject8","DropdownButton","button","_templateObject9","DropdownList","ul","_templateObject10","_ref","open","DropdownItem","li","_templateObject11","Down","FiChevronDown","_templateObject12","StyledQuestion","_templateObject13","StyledInputQuestion","_templateObject14","AnswerCardContainer","_templateObject15","BtnContainer","_templateObject16","StyledBtnSave","BtnConfirmAuthS","_templateObject17","StyledBtnCancel","_templateObject18","StyledQuestionNumber","p","_templateObject19","StyledAnswerWrapper","props","$quiz","StyledLabelAnswer","label","StyledAnswerBoolean","StyledTextareaAnswer","textarea","StyledInputRadio","letter","changeAttribute","checked","type","currentQuestion","selectAnswers","handleQuizChange","definedValueInput","idxInput","indexOf","key","includes","concat","_jsx","children","_jsxs","htmlFor","className","id","name","placeholder","value","onChange","setCurrentQuestion","quiz","handleSubmit","_useState","useState","_useState2","_slicedToArray","isDropdownTimeOpen","setDropdownTimeOpen","_useState3","_useState4","isCurrentTime","setIsCurrentTime","_useState5","_useState6","isChecked","setChecked","currentQuiz","useSelector","currentCreated","isDesktop","useMediaQuery","query","dropdownRef","useRef","formatTime","timeInSeconds","minutes","Math","floor","seconds","String","padStart","useEffect","handleDocumentTimeClick","event","current","contains","target","document","addEventListener","removeEventListener","handleClickTime","evt","currentTime","textContent","currentTimeId","prevState","_objectSpread","time","handleRadioAnswer","fields","forEach","item","idx","_defineProperty","_objectSpread3","quizName","ref","onClick","style","rotate","map","el","question","AnswerCard","_id","QuestionsWrapper","QuestionList","SelectStyledQuiz","FiChevronUp","isDropdownOpen","setIsDropdownOpen","selectedOptions","handleAdd","maxHeight","overflowY","option","index","charAt","toUpperCase","slice","role","filter","cursor","FiTrash2","uuidv4","size","HiArrowLongRight","AttributeTitles","SetAttributeDiv","SelectAudienceDiv","InputsWrapper","ChooseAudienceLabel","AttributeCategorySelect","select","SelectColorDiv","ColorLabel","changeCategory","categories","arrOptions","quizType","adults","quizCategory","hidden","categoryName","background","PageWrapper","SectionWrapper","section","options","headers","addQuestion","_x","_addQuestion","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","quizId","_yield$instance$post","data","wrap","_context","prev","next","instance","post","sent","abrupt","stop","getQuestion","_x2","_getQuestion","_callee2","questionId","_yield$instance$get","_context2","get","updateQuestion","_x3","_updateQuestion","_callee3","_ref2","_yield$instance$put","_context3","put","deleteQuestion","_x4","_deleteQuestion","_callee4","_yield$instance$delet","_context4","delete","addQuestionThunk","createAsyncThunk","questionData","thunkAPI","t0","rejectWithValue","response","_ref3","_x5","_x6","_ref4","_x7","_x8","setCurrentQuiz","allCategories","selectDiscoverAllCategories","dispatch","useDispatch","isMobile","getQuizCategoriesThunk","handleRadioChange","idInput","nameInput","answer","dataset","createQuizThunk","PageTopBar","titlePage","_Fragment","QuestionCard","SelectAttributeCard","QuestionsList","StyledPageTitle","h2","PageTopBarBox","ButtonS","BiPlusS","BiPlus","IconWrapper","BtnTitle","h3","Link","to","PageTitle","BtnCreateQuiz"],"sourceRoot":""}