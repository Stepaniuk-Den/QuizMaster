{"version":3,"file":"static/js/463.b625a2dc.chunk.js","mappings":"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","sources":["modules/discoverPage/components/RatingStarsRadio/RatingStarsRadioStyled.js","modules/quizPage/AfterTestFeedback/AfterTestFeedbackStyled.js","modules/quizPage/AfterTestFeedback/AfterTestFeedback.jsx","modules/quizPage/QuizQuestion/QuizQuestionStyled.js","modules/quizPage/QuizQuestion/QuizQuestion.jsx","modules/quizPage/AnswerList/AnswerList.jsx","modules/quizPage/BaseQuizForm/BaseQuizFormStyled.js","modules/quizPage/BaseQuizForm/BaseQuizForm.jsx","modules/quizPage/QuizFeedback/QuizFeedbackStyled.js","modules/quizPage/QuizFeedback/QuizFeedback.jsx","modules/quizPage/QuizResult/QuizResultStyled.js","modules/quizPage/QuizResult/QuizResult.jsx","pages/QuizePage/QuizePage.styled.js","pages/QuizePage/QuizePage.jsx","shared/components/Buttons/GoBackBtn/GoBackBtn.styled.js","shared/components/Buttons/GoBackBtn/GoBackBtn.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport Rating from \"@mui/material/Rating\";\n\nexport const RatingS = styled(Rating)({\n  \"& .MuiRating-iconFilled\": {\n    color: \"var(--star-color-100)\",\n  },\n  \"& .MuiRating-iconEmpty\": {\n    color: \"var(--star-color-8)\",\n  },\n});\n","import styled from \"styled-components\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nexport const FormContainer = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  margin-bottom: 204px;\n  margin-top: 204px;\n  padding: 130px 20px;\n  max-width: 335px;\n  height: 404px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 20px;\n  border: 1px var(--border-color-30) solid;\n  background-color: var(--second-background);\n\n  @media (min-width: 768px) {\n    max-width: 452px;\n    height: 408px;\n    margin-bottom: 196px;\n    margin-top: 196px;\n    padding: 120px 100px;\n  }\n`;\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  gap: 32px;\n`;\nexport const TitleThanks = styled.h2`\n  font-size: 20px;\n  font-family: \"GilroyBold\";\n  line-height: 20px;\n  margin-bottom: 16px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\nexport const TextThanks = styled.p`\n  color: var(--text-color-60);\n  font-size: 15px;\n  font-family: \"GilroyRegular\";\n  line-height: 20px;\n`;\nexport const ToMainPageBtn = styled.button`\n  color: inherit;\n  font-size: 14px;\n  font-family: \"GilroyBold\";\n  line-height: 16px;\n  width: 100%;\n  height: 100%;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  background: var(--accent-color);\n  border-radius: 30px;\n  border: none;\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\nexport const CloseBtnContainer = styled.button`\n  position: absolute;\n  top: 18px;\n  right: 18px;\n  background-color: transparent;\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    top: 24px;\n    right: 24px;\n  }\n`;\nexport const CloseBtn = styled(AiOutlineClose)`\n  width: 20px;\n  height: 20px;\n  color: var(--text-color-100);\n`;\nexport const SplashImg = styled.img`\n  position: absolute;\n  top: 55.5%;\n  right: 41%;\n  width: 343px;\n  height: 325px;\n  max-width: 100%;\n\n  @media (min-width: 768px) {\n    top: 46%;\n    right: 51%;\n    width: 470px;\n    height: 445px;\n  }\n\n  @media (min-width: 1440px) {\n    top: 45%;\n    right: 53.6%;\n  }\n`;\n","import { useRef } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  CloseBtn,\n  CloseBtnContainer,\n  FormContainer,\n  FormWrapper,\n  TextThanks,\n  TitleThanks,\n  ToMainPageBtn,\n} from \"./AfterTestFeedbackStyled\";\n\nconst AfterTestFeedback = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from);\n\n  const handleClick = () => {\n    navigate(backLink.current ?? \"/\");\n  };\n  return (\n    <>\n      <FormContainer>\n        <CloseBtnContainer onClick={handleClick}>\n          <CloseBtn />\n        </CloseBtnContainer>\n        <TitleThanks>Thank you</TitleThanks>\n        <FormWrapper>\n          <TextThanks>\n            for your feedback, feedback is very important to us.\n          </TextThanks>\n          <Link to=\"/\">\n            <ToMainPageBtn>To main page</ToMainPageBtn>\n          </Link>\n        </FormWrapper>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default AfterTestFeedback;\n","import styled from \"styled-components\";\nimport isPropValid from \"@emotion/is-prop-valid\";\n\n// export const = styled\nexport const TitleQuestion = styled.h2`\n  color: var(--text-color-100);\n  font-size: 24px;\n\n  font-weight: 700;\n  line-height: 32px;\n  letter-spacing: -0.24px;\n  margin-bottom: 40px;\n`;\n\nexport const NextButton = styled.button`\n  padding: 16px 62px;\n  border-radius: 30px;\n  background: var(--blue-background);\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 16px;\n  letter-spacing: -0.01em;\n\n  color: var(--text-color-100);\n\n  &:disabled {\n    color: rgba(244, 244, 244, 0.2);\n    cursor: not-allowed;\n  }\n`;\n\nexport const AnswersContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-top: 16px;\n`;\n\nexport const ButtonText = styled.p`\n  color: var(--text-color-100);\n  font-size: 16px;\n  line-height: 16px;\n  letter-spacing: -0.01em;\n`;\n\nexport const AnswerLabels = styled.span`\n  font-style: normal;\n  font-weight: 700;\n`;\n\nexport const BackButton = styled.button`\n  background: none;\n  border: none;\n  color: white;\n  cursor: pointer;\n  margin-left: 14px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 16px;\n  letter-spacing: -0.01em;\n  color: var(--text-color-100);\n  border-bottom: 2px solid var(--text-color-100);\n  &:disabled {\n    color: rgba(244, 244, 244, 0.2);\n    border-bottom: 2px solid rgba(244, 244, 244, 0.2);\n    cursor: not-allowed;\n  }\n`;\n\nexport const DownContainer = styled.div`\n  position: relative;\n  margin-top: 40px;\n`;\n\nexport const AnswersCounter = styled.p`\n  position: absolute;\n  text-align: \"right\";\n  bottom: 0;\n  right: 0;\n  margin: 0;\n`;\n\nexport const StyledButton = styled.button.withConfig({\n  shouldForwardProp: (prop) => isPropValid(prop),\n})`\n  width: 295px;\n  @media (min-width: 768px) {\n    width: 222px;\n  }\n\n  text-align: left;\n  padding: 14px 0 14px 18px;\n  border-radius: 30px;\n  border: 1px solid\n    ${(props) =>\n      props.isCorrect === \"correct\"\n        ? \"green\"\n        : props.isCorrect === \"incorrect\"\n        ? \"red\"\n        : \"rgba(244, 244, 244, 0.6)\"};\n  cursor: pointer;\n  background-color: ${(props) =>\n    props.isCorrect === \"correct\"\n      ? \"rgba(29, 236, 18, 0.25)\"\n      : props.isCorrect === \"incorrect\"\n      ? \"rgba(255, 0, 0, 0.2)\"\n      : \"transparent\"};\n  color: ${(props) =>\n    props.isCorrect === \"correct\"\n      ? \"white\"\n      : props.isCorrect === \"incorrect\"\n      ? \"white\"\n      : \"black\"};\n`;\n\nexport const QuizeBox = styled.div`\n  width: 335px;\n  background-color: var(--second-background);\n  padding: 40px 20px;\n  border-radius: 20px;\n  @media (min-width: 768px) {\n    width: 580px;\n    background-color: var(--second-background);\n    padding: 60px;\n    border-radius: 20px;\n  }\n`;\n\nexport const TimeText = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 16px;\n  letter-spacing: -0.01em;\n  color: rgba(244, 244, 244, 0.6);\n`;\n\nexport const StyledCountdown = styled.span`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 16px;\n  letter-spacing: -0.01em;\n  color: #f4f4f4;\n  margin-left: 8px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  NextButton,\n  BackButton,\n  StyledButton,\n  TitleQuestion,\n  AnswersContainer,\n  ButtonText,\n  DownContainer,\n  AnswersCounter,\n  AnswerLabels,\n  QuizeBox,\n  StyledCountdown,\n  TimeText,\n} from \"./QuizQuestionStyled\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getPassedQuizzesThunk,\n  passedUsersQuiz,\n  updateQuizThunk,\n  updateUsersQuiz,\n} from \"../../../redux/quiz/quizThunks\";\nimport { useAuth } from \"../../../hooks/useAuth\";\n\nfunction QuizQuestion({ questions, quizId }) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const answerLabels = [\"A\", \"C\", \"B\", \"D\"];\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [previousQuestion, setPreviousQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(false);\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\n  const [userAnswers, setUserAnswers] = useState({});\n  const searchParams = new URLSearchParams(location.search);\n  const inputValue = searchParams.get(\"inputValue\");\n\n  const answers = questions[currentQuestion].answers;\n  const question = questions[currentQuestion];\n  const { isAuth } = useAuth();\n\n  const handleButtonClick = (answer, index) => {\n    const isCorrect = answer.correctAnswer;\n\n    setIsAnswerSelected(true);\n\n    setSelectedAnswer(true);\n\n    setUserAnswers((prevAnswers) => {\n      const questionId = questions[currentQuestion]._id;\n\n      return {\n        ...prevAnswers,\n        [questionId]: {\n          true: answers.findIndex((ans) => ans.correctAnswer === true),\n          false: !isCorrect\n            ? index\n            : answer.correctAnswer\n            ? index\n            : prevAnswers[questionId]?.false,\n          time: timeRemaining,\n        },\n      };\n    });\n\n    if (isCorrect) {\n      setCorrectAnswersCount((prevCount) => prevCount + 1);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setSelectedAnswer(false);\n      setIsAnswerSelected(false);\n      setPreviousQuestion(currentQuestion);\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      navigate(\n        `/quiz/${quizId}/quizresult?correctAnswersCount=${correctAnswersCount}&totalQuestions=${questions.length}&inputValue=${inputValue}`\n      );\n\n      const quizData = {\n        result: {\n          quizId: quizId,\n          quantityQuestions: questions.length,\n          correctAnswers: correctAnswersCount,\n        },\n      };\n\n      dispatch(updateQuizThunk(quizId));\n      if (isAuth) {\n        dispatch(getPassedQuizzesThunk()).then((arr) => {\n          const totalPassed = arr.payload;\n          if (totalPassed.length === 0) {\n            dispatch(passedUsersQuiz(quizData));\n          } else if (totalPassed && totalPassed.data.some((item) => item._id === quizData.result.quizId)) {\n            dispatch(updateUsersQuiz(quizData));\n          } else {\n            dispatch(passedUsersQuiz(quizData));\n          }\n        });\n      }\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (previousQuestion !== null) {\n      setSelectedAnswer(true);\n      setIsAnswerSelected(false);\n      setCurrentQuestion(previousQuestion);\n      setPreviousQuestion(previousQuestion - 1);\n\n      const prevQuestionId = questions[previousQuestion]._id;\n      const prevUserAnswer = userAnswers[prevQuestionId];\n\n      if (prevUserAnswer && prevUserAnswer.time) {\n        setTimeRemaining(prevUserAnswer.time);\n          setSelectedAnswer(true);\n      } else {\n        setTimeRemaining(question.time);\n      }\n    }\n  };\n\n  const isAnswerTrue = userAnswers[questions[currentQuestion]._id]?.true;\n  const isAnswerFalse = userAnswers[questions[currentQuestion]._id]?.false;\n\n  const getButtonClass = (index) => {\n    if (index === isAnswerTrue && index === isAnswerFalse) {\n      return \"correct\";\n    } else if (index === isAnswerTrue) {\n      return \"correct\";\n    } else if (Array.isArray(isAnswerFalse)) {\n      if (isAnswerFalse.includes(index)) {\n        return \"incorrect\"\n      }\n    } else if(index === isAnswerFalse){\n        return \"incorrect\"\n      }\n     else {\n      return \"normal\";\n    }\n  };\n\n  const [timeRemaining, setTimeRemaining] = useState(question.time);\n\n  const formatTime = (timeInSeconds) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n    return `${String(minutes).padStart(2, \"0\")}:${String(seconds).padStart(\n      2,\n      \"0\"\n    )}`;\n  };\n\n useEffect(() => {\n  setTimeRemaining(question.time);\n}, [question, currentQuestion]);\n\nuseEffect(() => {\n  let timer;\n  if (!isAnswerSelected && timeRemaining > 0) {\n    timer = setTimeout(() => {\n      setTimeRemaining((prevTime) => prevTime - 1);\n    }, 1000);\n  } else if (timeRemaining === 0 && !isAnswerSelected) {\n    setTimeRemaining(null)\n    setUserAnswers((prevAnswers) => {\n      const questionId = questions[currentQuestion]._id;\nconst falseIndexes = answers\n        .map((elem, index) => (elem.correctAnswer === false ? index : null))\n        .filter((index) => index !== null);\n\n      return {\n        ...prevAnswers,\n        [questionId]: {\n          true: answers.findIndex((ans) => ans.correctAnswer === true),\n          false: falseIndexes,\n          time: timeRemaining,\n        },\n      }\n    });\n  }\n\n  if (isAnswerSelected) {\n    clearTimeout(timer);\n  } \n\n  return () => {\n    clearTimeout(timer);\n  };\n}, [question, currentQuestion, isAnswerSelected, timeRemaining, questions, answers]);\n\n\n  return (\n    <>\n      <QuizeBox>\n        <TitleQuestion>{questions[currentQuestion].question}</TitleQuestion>\n        <TimeText>\n          Time:\n          <StyledCountdown>\n            <span>\n              {userAnswers[questions[currentQuestion]._id]\n                ? formatTime(userAnswers[questions[currentQuestion]._id].time)\n                : formatTime(timeRemaining)}\n            </span>\n          </StyledCountdown>\n        </TimeText>\n        <div>\n          <AnswersContainer>\n            {answers.map((answer, index) => (\n              <li key={index}>\n                <StyledButton\n                  onClick={() => handleButtonClick(answer, index)}\n                  isCorrect={getButtonClass(index)}\n                  disabled={userAnswers[questions[currentQuestion]._id]}\n                >\n                  <ButtonText>\n                    <AnswerLabels>{answerLabels[index]} : </AnswerLabels>\n                    {`${answer.answer}`}\n                  </ButtonText>\n                </StyledButton>\n              </li>\n            ))}\n          </AnswersContainer>\n        </div>\n        <DownContainer>\n          <AnswersCounter>\n            {currentQuestion + 1}/{questions.length}\n          </AnswersCounter>\n          <NextButton\n            onClick={handleNextQuestion}\n            disabled={!selectedAnswer && !userAnswers[questions[currentQuestion]._id]}\n          >\n            Next\n          </NextButton>\n          {currentQuestion > 0 && (\n            <BackButton onClick={handlePreviousQuestion}\n              disabled={!selectedAnswer && !userAnswers[questions[currentQuestion]._id]}\n            >Back</BackButton>\n          )}\n        </DownContainer>\n      </QuizeBox>\n    </>\n  );\n}\n\nexport default QuizQuestion;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getQuizThunk } from \"../../../redux/quiz/quizThunks\";\nimport QuizQuestion from \"../QuizQuestion\";\n\nconst AnswerList = () => {\n  const { quizId } = useParams();\n  const dispatch = useDispatch();\n  const [quizData, setQuizData] = useState([]);\n\n  useEffect(() => {\n    dispatch(getQuizThunk(quizId)).then((data) => {\n      setQuizData(data.payload.questions);\n    });\n  }, [dispatch, quizId]);\n\n  return (\n    <div>\n      {quizData.length > 0 && (\n        <QuizQuestion questions={quizData} quizId={quizId} />\n      )}\n    </div>\n  );\n};\n\nexport default AnswerList;\n","import styled from \"styled-components\";\n\nexport const QuizeBox = styled.div`\n  width: 335px;\n  margin-top: 157px;\n  background-color: var(--second-background);\n  padding: 40px 20px;\n  border-radius: 20px;\n  text-align: center;\n  @media (min-width: 768px) {\n    width: 580px;\n    margin-top: 208px;\n    background-color: var(--second-background);\n    padding: 124px 130px;\n    border-radius: 20px;\n  }\n  @media (min-width: 1440px) {\n    margin-top: 112px;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: #f4f4f4;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 32px;\n  letter-spacing: -0.24px;\n  margin-bottom: 12px;\n`;\n\nexport const Category = styled.p`\n  color: rgba(244, 244, 244, 0.6);\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: -0.16px;\n  margin-bottom: 32px;\n`;\n\nexport const InputName = styled.input`\n  width: 100%;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 18px;\n  border-radius: 30px;\n  border: 1px solid rgba(244, 244, 244, 0.6);\n  background: transparent;\n  color: #f4f4f4;\n  font-size: 16px;\n  font-weight: 400;\n  margin-bottom: 16px;\n\n  &::placeholder {\n    color: rgba(244, 244, 244, 0.4);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid rgba(244, 244, 244, 0.8);\n    box-shadow: none;\n  }\n`;\n\nexport const ButtonStart = styled.button`\n  border-radius: 30px;\n  background: #205bf1;\n  padding: 16px;\n  width: 100%;\n  color: ${(props) =>\n    props.disabled ? \"rgba(244, 244, 244, 0.20)\" : \"#F4F4F4\"};\n  font-size: 16px;\n  font-weight: 700;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport {\n  ButtonStart,\n  Category,\n  InputName,\n  QuizeBox,\n  Title,\n} from \"./BaseQuizFormStyled\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsAuth, selectUser } from \"../../../redux/user/userSelectors\";\n\nconst BaseQuizForm = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const hasToken = useSelector(selectIsAuth);\n  const name = useSelector(selectUser);\n  const { quizId } = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const category = searchParams.get(\"category\")\n  \n  useEffect(() => {\n    if (hasToken && name.name) {\n      setInputValue(name.name);\n    }\n  }, [hasToken, name.name]);\n\n  const handleInputChange = (event) => {\n    const value = event.target.value;\n    setInputValue(value);\n  };\n\n  return (\n    <>\n      <QuizeBox>\n        <Title>Log in to take the quiz</Title>\n        <Category>{category}</Category>\n        <InputName\n          type=\"text\"\n          placeholder=\"Name\"\n          value={inputValue}\n          onChange={handleInputChange}\n          readOnly={hasToken && name.name}\n        />\n        <Link to={`/quiz/${quizId}/quizquestion?inputValue=${inputValue}`}>\n          <ButtonStart disabled={inputValue.length < 3}>Start</ButtonStart>\n        </Link>\n      </QuizeBox>\n      </>\n  );\n};\n\nexport default BaseQuizForm;\n","import styled from \"styled-components\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nexport const FormContainer = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  margin-bottom: 155px;\n  margin-top: 102px;\n  padding: 40px 20px;\n  max-width: 335px;\n  width: 100%;\n  height: 503px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 20px;\n  border: 1px var(--border-color-30) solid;\n  background-color: var(--second-background);\n\n  @media (min-width: 768px) {\n    max-width: 481px;\n    height: 460px;\n    margin-top: 202px;\n    padding: 60px 80px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-top: 170px;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  font-size: 20px;\n  font-family: \"GilroyBold\";\n  line-height: 20px;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\nexport const NameInput = styled.input`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 18px;\n  border-radius: 30px;\n  border: 1px var(--border-color-60) solid;\n  background-color: transparent;\n  margin-bottom: 20px;\n  color: var(--text-color-50);\n  font-size: 14px;\n  letter-spacing: -0.16px;\n  font-family: \"GilroyRegular\";\n`;\n\nexport const RatingWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 4px;\n  margin-bottom: 12px;\n`;\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  &.has-error {\n    gap: 16px;\n  }\n`;\nexport const TextRating = styled.h3`\n  color: var(--text-color-60);\n  font-size: 16px;\n  font-family: \"GilroyRegular\";\n  font-weight: 400;\n  line-height: 22px;\n  margin-right: 8px;\n`;\nexport const StarBtn = styled.button`\n  background-color: transparent;\n  line-height: 10px;\n`;\nexport const FormTextarea = styled.textarea`\n  height: 100%;\n  padding-top: 14px;\n  padding-bottom: 140px;\n  padding-left: 18px;\n  padding-right: 18px;\n  resize: none;\n  border-radius: 15px;\n  border: 1px var(--border-color-60) solid;\n  background-color: transparent;\n  color: var(--text-color-50);\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: -0.16px;\n  font-family: \"GilroyRegular\";\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    padding-bottom: 57px;\n  }\n`;\nexport const SendBtn = styled.button`\n  color: inherit;\n  font-size: 14px;\n  font-family: \"GilroyBold\";\n  line-height: 16px;\n  width: 100%;\n  height: 100%;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  background: var(--accent-color);\n  border-radius: 30px;\n  border: none;\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\nexport const CloseBtnContainer = styled.button`\n  position: absolute;\n  top: 18px;\n  right: 18px;\n  background-color: transparent;\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n  @media (min-width: 768px) {\n    top: 24px;\n    right: 24px;\n  }\n`;\nexport const CloseBtn = styled(AiOutlineClose)`\n  width: 20px;\n  height: 20px;\n  color: var(--text-color-100);\n`;\nexport const ErrorsStyled = styled.div`\n  margin: 0 0;\n  font-size: 12px;\n  line-height: 1.1;\n  color: var(--pink-color);\n  text-align: center;\n`;\n","import { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport {\n  CloseBtn,\n  CloseBtnContainer,\n  ErrorsStyled,\n  FormContainer,\n  FormTextarea,\n  FormTitle,\n  InputWrapper,\n  NameInput,\n  RatingWrapper,\n  SendBtn,\n  TextRating,\n} from \"./QuizFeedbackStyled\";\nimport { selectUser } from \"../../../redux/user/userSelectors\";\nimport { createQuizReviewThunk } from \"../../../redux/feedback/feedbackThunks\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { notifyError } from \"../../../shared/NotificationToastify/Toasts\";\nimport { RatingS } from \"../../discoverPage/components/RatingStarsRadio/RatingStarsRadioStyled\";\n\nconst QuizFeedback = ({ to }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const inputValue = searchParams.get(\"inputValue\");\n  const { isAuth } = useAuth();\n  const { quizId } = useParams();\n  const backLink = useRef(location.state?.from);\n  const infoUser = useSelector(selectUser);\n  const [value, setValue] = useState(0);\n\n  const handleClick = () => {\n    navigate(backLink.current ?? \"/\");\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      rating: 0,\n      feedback: \"\",\n    },\n\n    validationSchema: Yup.object({\n      feedback: Yup.string()\n        .min(8, \"Enter at least 8 characters\")\n        .required(\"Please write your feedback\"),\n    }),\n\n    onSubmit: async (values) => {\n      const reviewData = {\n        userName: inputValue,\n        userAvatar: infoUser.userAvatar,\n        rate: value,\n        comment: values.feedback,\n        quizId: quizId,\n      };\n      try {\n        await dispatch(createQuizReviewThunk({ quizId, reviewData }));\n        navigate(`/quiz/${quizId}/aftertestfeedback`);\n      } catch (error) {\n        notifyError(error);\n      }\n    },\n  });\n\n  return (\n    <>\n      <FormContainer>\n        <CloseBtnContainer onClick={handleClick}>\n          <CloseBtn />\n        </CloseBtnContainer>\n        <form onSubmit={formik.handleSubmit}>\n          <InputWrapper>\n            <FormTitle>Write a review</FormTitle>\n            <NameInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              onChange={formik.handleChange}\n              value={formik.values.name}\n              defaultValue={!isAuth ? inputValue : infoUser.name}\n              readOnly={!isAuth ? inputValue : infoUser.name}\n            />\n          </InputWrapper>\n          <RatingWrapper>\n            <TextRating>Rate the quiz</TextRating>\n            <RatingS\n              name=\"simple-controlled\"\n              value={value}\n              onChange={(_, newValue) => {\n                setValue(newValue);\n              }}\n              emptyIcon={<StarIcon />}\n            />\n          </RatingWrapper>\n          <InputWrapper\n            className={\n              formik.errors.feedback && formik.touched.feedback\n                ? \"has-error\"\n                : \"\"\n            }\n          >\n            <FormTextarea\n              type=\"text\"\n              name=\"feedback\"\n              placeholder=\"What is your opinion on the quiz\"\n              onChange={formik.handleChange}\n              value={formik.values.feedback}\n            />\n            {formik.errors.feedback && formik.touched.feedback ? (\n              <ErrorsStyled>{formik.errors.feedback}</ErrorsStyled>\n            ) : null}\n            <SendBtn type=\"submit\">Send</SendBtn>\n          </InputWrapper>\n        </form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default QuizFeedback;\n","import styled from \"styled-components\";\nimport { Rating } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nexport const QuizeBox = styled.div`\n  position: relative;\n  max-width: 580px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  padding: 60px;\n  background-color: var(--blue-background);\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px) {\n    max-width: 335px;\n    padding: 80px;\n  }\n`;\n\nexport const ResultTitleS = styled.h2`\n  margin-bottom: 32px;\n  font-size: 24px;\n  font-family: \"GilroyBold\";\n  line-height: 1.1;\n  color: var(--text-color-100);\n\n  @media screen and (max-width: 768px) {\n    font-size: 20px;\n    line-height: 1.4;\n  }\n`;\n\nexport const ResultTextS = styled.p`\n  margin-bottom: 12px;\n  color: var(--text-color-60);\n\n  @media screen and (max-width: 768px) {\n    font-size: 14px;\n    line-height: 1.1;\n  }\n`;\n\nexport const AnswersResultS = styled.p`\n  margin-bottom: 32px;\n  font-size: 24px;\n  font-family: \"GilroyBold\";\n  line-height: 1.3;\n  color: var(--text-color-100);\n\n  @media screen and (max-width: 768px) {\n    font-size: 20px;\n    line-height: 1.4;\n  }\n`;\n\nexport const BtnWriteReviewLink = styled(Link)`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 75px;\n  max-width: 169px;\n  width: 100%;\n  height: 48px;\n  font-family: \"GilroyBold\";\n  border: 1px solid var(--text-color-60);\n  border-radius: 30px;\n  background: transparent;\n  color: var(--text-color-100);\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (max-width: 768px) {\n    margin-top: 32px;\n    max-width: 156px;\n    font-size: 14px;\n    line-height: 1.1;\n  }\n`;\n\n\nexport const RatingBox = styled.div`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const RatingS = styled(Rating)({\n  \"& .MuiRating-iconFilled\": {\n    color: \"var(--star-color-100)\",\n    // size: \"large\",\n  },\n  \"& .MuiRating-iconEmpty\": {\n    color: \"var(--star-color-8)\",\n    // size: \"large\",\n  },\n  // \"& .MuiRating-iconHover\": {\n  //   color: \"var(--star-color-8)\",\n  //   // size: \"large\",\n  // },\n  // \"& . MuiRating-iconSize\": {\n  //   size:\"large\",\n  // }\n\n  // .MuiRating-sizeLarge\n  // .MuiRating-icon\n  // \"& .emptyIcon\": {\n  //   fontSize: \"large\",\n  // }\n});\n\n\nexport const BtnCloseS = styled.button`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  @media screen and (max-width: 768px) {\n    width: 24px;\n    height: 24px;\n    top: 16px;\n    right: 16px;\n  }\n`;\n\nexport const AiOutlineCloseS = styled(AiOutlineClose)`\n  width: 28px;\n  height: 28px;\n  fill: var(--text-color-100);\n\n  @media screen and (max-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import React, { useRef, useState } from \"react\";\nimport {\n  AiOutlineCloseS,\n  AnswersResultS,\n  BtnCloseS,\n  BtnWriteReviewLink,\n  QuizeBox,\n  RatingBox,\n  RatingS,\n  ResultTextS,\n  ResultTitleS,\n} from \"./QuizResultStyled\";\nimport { useLocation } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { createReviewQuizThunk } from \"../../../redux/feedback/feedbackThunks\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport { notifyRateAddSuccess } from \"../../../shared/NotificationToastify/Toasts\";\nimport { useNavigate } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\n\nconst QuizResult = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const correctAnswersCount = searchParams.get(\"correctAnswersCount\");\n  const totalQuestions = searchParams.get(\"totalQuestions\");\n  const inputValue = searchParams.get(\"inputValue\");\n  const { quizId } = useParams();\n  const [value, setValue] = useState(0);\n  const navigate = useNavigate();\n  const backLink = useRef(location.state?.from);\n\n  const handleClickBtnClose = (value) => {\n    if (value > 0) {\n      dispatch(createReviewQuizThunk({ quizId, rate: value })).then(() => {\n        notifyRateAddSuccess();\n        navigate(backLink.current ?? \"/\");\n      });\n      // .catch((error) => {\n      //   notifyError(error);\n      // });\n    } else {\n      navigate(backLink.current ?? \"/\");\n    }\n  };\n\n  return (\n    <QuizeBox>\n      <BtnCloseS type=\"submit\" onClick={() => handleClickBtnClose(value)}>\n        <AiOutlineCloseS />\n      </BtnCloseS>\n      <ResultTitleS>The results</ResultTitleS>\n      <ResultTextS>Correct answers</ResultTextS>\n      <AnswersResultS>\n        {correctAnswersCount}/{totalQuestions}\n      </AnswersResultS>\n\n      <ResultTextS>Rate the quiz</ResultTextS>\n      <RatingBox>\n        <RatingS\n          name=\"simple-controlled\"\n          value={value}\n          // size=\"large\"\n          onChange={(_, newValue) => {\n            setValue(newValue);\n          }}\n          emptyIcon={<StarIcon />}\n        />\n      </RatingBox>\n\n      <BtnWriteReviewLink\n        to={`/quiz/${quizId}/quizfeedback?inputValue=${inputValue}`}\n      >\n        Write a review\n      </BtnWriteReviewLink>\n    </QuizeBox>\n  );\n};\n\nexport default QuizResult;\n","import styled from \"styled-components\";\nimport mobileQuizPageBg from \"../../shared/images/mobile/question-mobile@1x.webp\";\nimport mobileQuizPageBg2x from \"../../shared/images/mobile/question-mobile@2x.webp\";\nimport tabletQuizPageBg from \"../../shared/images/tablet/question-tablet@1x.webp\";\nimport tabletQuizPageBg2x from \"../../shared/images/tablet/question-tablet@2x.webp\";\nimport desktopQuizPageBg from \"../../shared/images/desktop/question-desktop@1x.webp\";\nimport desktopQuizPageBg2x from \"../../shared/images/desktop/question-desktop@2x.webp\";\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const SplashWrapS = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: center;\n\n  @media screen and (max-width: 767px) {\n    max-width: 375px;\n    width: 100%;\n    min-height: 500px;\n    height: 100%;\n    background-image: url(${mobileQuizPageBg});\n    background-repeat: no-repeat;\n    background-position: left bottom;\n    background-size: 343px 325px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${mobileQuizPageBg2x});\n      background-size: 343px 325px;\n    }\n  }\n\n  @media only screen and (min-width: 768px) {\n    max-width: 768px;\n    width: 100%;\n    min-height: 500px;\n    height: 100%;\n    background-image: url(${tabletQuizPageBg});\n    background-repeat: no-repeat;\n    background-position: left bottom;\n    background-size: 407px 445px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${tabletQuizPageBg2x});\n      background-size: 407px 445px;\n    }\n  }\n\n  @media only screen and (min-width: 1440px) {\n    max-width: 1062px;\n    width: 100%;\n    min-height: 580px;\n    height: 100%;\n    background-image: url(${desktopQuizPageBg});\n    background-repeat: no-repeat;\n    background-position: left bottom;\n    background-size: 407px 445px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${desktopQuizPageBg2x});\n      background-size: 407px 445px;\n    }\n  }\n`;\n\nexport const Container = styled.div`\n  max-width: 1240px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const BackBox = styled.div`\n  margin-top: 52px;\n  margin-bottom: 32px;\n\n  @media (min-width: 768px) {\n    margin-top: 44px;\n    margin-bottom: 144px;\n  }\n  @media (min-width: 1440px) {\n    margin-top: 60px;\n    margin-bottom: 32px;\n  }\n`;\n","import GoBackBtn from \"../../shared/components/Buttons/GoBackBtn/GoBackBtn\";\nimport { PageWrapper, BackBox, Container, SplashWrapS } from \"./QuizePage.styled\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport BaseQuizForm from \"../../modules/quizPage/BaseQuizForm\";\nimport QuizResult from \"../../modules/quizPage/QuizResult\";\nimport AnswerList from \"../../modules/quizPage/AnswerList\";\nimport QuizFeedback from \"../../modules/quizPage/QuizFeedback/QuizFeedback\";\nimport AfterTestFeedback from \"../../modules/quizPage/AfterTestFeedback/AfterTestFeedback\";\n\nconst QuizePage = () => {\n  const { quizId } = useParams();\n  const location = useLocation();\n\n  const shouldShowGoBackBtn = () => {\n    const noGoBackBtn = [\n      `/quiz/${quizId}/quizfeedback`,\n      `/quiz/${quizId}/aftertestfeedback`,\n      `/quiz/${quizId}/basequizform`,\n    ];\n    return !noGoBackBtn.includes(location.pathname);\n  };\n\n  return (\n    <Container>\n      {shouldShowGoBackBtn() && (\n        <BackBox>\n          <GoBackBtn to=\"/\" />\n        </BackBox>\n      )}\n      <PageWrapper>\n      <SplashWrapS>\n        <Outlet>\n          <BaseQuizForm quizId={quizId} />\n          <AnswerList quizId={quizId} />\n          <QuizResult quizId={quizId} />\n          <QuizFeedback quizId={quizId} />\n          <AfterTestFeedback />\n        </Outlet>\n        </SplashWrapS>\n      </PageWrapper>\n    </Container>\n  );\n};\n\nexport default QuizePage;\n","import styled from \"styled-components\";\nimport { HiArrowLongLeft } from \"react-icons/hi2\";\nimport { Link } from \"react-router-dom\";\n\nexport const BackArrow = styled(HiArrowLongLeft)`\n  width: 24px;\n  height: 24px;\n  color: var(--text-color-100);\n  margin-right: 6px;\n`;\n\nexport const BackText = styled.span`\n  line-height: 20px;\n  color: var(--text-color-100);\n`;\n\nexport const StyledLink = styled(Link)`\ndisplay: flex;\nalign-items: center;\nmax-width: 72px;\nheight: 24px;\nmargin-bottom: 16px;\ncursor: pointer;\n`;\n","import React from 'react';\nimport { BackArrow, BackText, StyledLink } from \"./GoBackBtn.styled\";\nimport { useNavigate } from 'react-router-dom'; \n\nconst GoBackBtn = () => {\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    if (navigate.length > 1) {\n      navigate(-1);\n    } else {\n      navigate(\"/quiz-master\");\n    }\n  };\n\n  return (\n    <StyledLink onClick={handleGoBack}>\n      <BackArrow />\n      <BackText>Back</BackText>\n    </StyledLink>\n  );\n};\n\nexport default GoBackBtn;"],"names":["RatingS","styled","Rating","color","FormContainer","div","_templateObject","_taggedTemplateLiteral","FormWrapper","_templateObject2","TitleThanks","h2","_templateObject3","TextThanks","p","_templateObject4","ToMainPageBtn","button","_templateObject5","CloseBtnContainer","_templateObject6","CloseBtn","AiOutlineClose","_templateObject7","img","_templateObject8","_location$state","navigate","useNavigate","location","useLocation","backLink","useRef","state","from","_jsx","_Fragment","children","_jsxs","onClick","_backLink$current","current","Link","to","TitleQuestion","NextButton","AnswersContainer","ul","ButtonText","AnswerLabels","span","BackButton","DownContainer","AnswersCounter","StyledButton","withConfig","shouldForwardProp","prop","isPropValid","_templateObject9","props","isCorrect","QuizeBox","_templateObject10","TimeText","_templateObject11","StyledCountdown","_templateObject12","_ref","_userAnswers$question","_userAnswers$question2","questions","quizId","dispatch","useDispatch","answerLabels","_useState","useState","_useState2","_slicedToArray","correctAnswersCount","setCorrectAnswersCount","_useState3","_useState4","currentQuestion","setCurrentQuestion","_useState5","_useState6","previousQuestion","setPreviousQuestion","_useState7","_useState8","selectedAnswer","setSelectedAnswer","_useState9","_useState10","isAnswerSelected","setIsAnswerSelected","_useState11","_useState12","userAnswers","setUserAnswers","inputValue","URLSearchParams","search","get","answers","question","isAuth","useAuth","isAnswerTrue","_id","true","isAnswerFalse","false","getButtonClass","index","Array","isArray","includes","_useState13","time","_useState14","timeRemaining","setTimeRemaining","formatTime","timeInSeconds","minutes","Math","floor","seconds","concat","String","padStart","useEffect","timer","setTimeout","prevTime","prevAnswers","questionId","falseIndexes","map","elem","correctAnswer","filter","_objectSpread","_defineProperty","findIndex","ans","clearTimeout","answer","_prevAnswers$question","prevCount","handleButtonClick","disabled","length","quizData","result","quantityQuestions","correctAnswers","updateQuizThunk","getPassedQuizzesThunk","then","arr","totalPassed","payload","passedUsersQuiz","data","some","item","updateUsersQuiz","prevQuestionId","prevUserAnswer","useParams","setQuizData","getQuizThunk","QuizQuestion","Title","Category","InputName","input","ButtonStart","setInputValue","hasToken","useSelector","selectIsAuth","name","selectUser","category","type","placeholder","value","onChange","event","target","readOnly","FormTitle","NameInput","RatingWrapper","InputWrapper","TextRating","h3","FormTextarea","textarea","SendBtn","ErrorsStyled","infoUser","setValue","formik","useFormik","initialValues","rating","feedback","validationSchema","Yup","min","required","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","reviewData","wrap","_context","prev","next","userName","userAvatar","rate","comment","createQuizReviewThunk","t0","notifyError","stop","_x","apply","arguments","handleSubmit","handleChange","defaultValue","_","newValue","emptyIcon","StarIcon","className","errors","touched","ResultTitleS","ResultTextS","AnswersResultS","BtnWriteReviewLink","RatingBox","BtnCloseS","AiOutlineCloseS","searchParams","totalQuestions","_backLink$current2","createReviewQuizThunk","notifyRateAddSuccess","handleClickBtnClose","PageWrapper","SplashWrapS","mobileQuizPageBg","mobileQuizPageBg2x","tabletQuizPageBg","tabletQuizPageBg2x","desktopQuizPageBg","desktopQuizPageBg2x","Container","BackBox","pathname","GoBackBtn","Outlet","BaseQuizForm","AnswerList","QuizResult","QuizFeedback","AfterTestFeedback","BackArrow","HiArrowLongLeft","BackText","StyledLink"],"sourceRoot":""}